Shader "S_Game_Scene/Light/TerrainVertexColor2Layers01" {
Properties {
 _Splat0 ("Layer 1", 2D) = "white" {}
 _Splat1 ("Layer 2", 2D) = "black" {}
}
SubShader { 
 Tags { "QUEUE"="Geometry+3" "RenderType"="Opaque" }
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "QUEUE"="Geometry+3" "RenderType"="Opaque" }
Program "vp" {
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 c_3;
  c_3.xyz = ((tmpvar_2 * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.w = c_3.w;
  c_1.xyz = (c_3.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 c_3;
  c_3.xyz = ((tmpvar_2 * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.w = c_3.w;
  c_1.xyz = (c_3.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 c_1;
  c_1.xyz = ((mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz) * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out highp vec2 xlv_TEXCOORD1;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 c_1;
  c_1.xyz = ((mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz) * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  c_1.w = 1.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  mediump vec3 lm_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_3 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_2 * lm_3);
  c_1.xyz = tmpvar_5;
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out highp vec2 xlv_TEXCOORD1;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  mediump vec3 lm_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_3 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_2 * lm_3);
  c_1.xyz = tmpvar_5;
  c_1.w = 1.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float tmpvar_3;
  mediump float lightShadowDataX_4;
  highp float dist_5;
  lowp float tmpvar_6;
  tmpvar_6 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  dist_5 = tmpvar_6;
  highp float tmpvar_7;
  tmpvar_7 = _LightShadowData.x;
  lightShadowDataX_4 = tmpvar_7;
  highp float tmpvar_8;
  tmpvar_8 = max (float((dist_5 > 
    (xlv_TEXCOORD3.z / xlv_TEXCOORD3.w)
  )), lightShadowDataX_4);
  tmpvar_3 = tmpvar_8;
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz))
   * tmpvar_3) * 2.0));
  c_9.w = 1.0;
  c_1.w = c_9.w;
  c_1.xyz = (c_9.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp float tmpvar_2;
  mediump float lightShadowDataX_3;
  highp float dist_4;
  lowp float tmpvar_5;
  tmpvar_5 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD2).x;
  dist_4 = tmpvar_5;
  highp float tmpvar_6;
  tmpvar_6 = _LightShadowData.x;
  lightShadowDataX_3 = tmpvar_6;
  highp float tmpvar_7;
  tmpvar_7 = max (float((dist_4 > 
    (xlv_TEXCOORD2.z / xlv_TEXCOORD2.w)
  )), lightShadowDataX_3);
  tmpvar_2 = tmpvar_7;
  c_1.xyz = ((mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz) * min ((2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz), vec3((tmpvar_2 * 2.0))));
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float tmpvar_3;
  mediump float lightShadowDataX_4;
  highp float dist_5;
  lowp float tmpvar_6;
  tmpvar_6 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD2).x;
  dist_5 = tmpvar_6;
  highp float tmpvar_7;
  tmpvar_7 = _LightShadowData.x;
  lightShadowDataX_4 = tmpvar_7;
  highp float tmpvar_8;
  tmpvar_8 = max (float((dist_5 > 
    (xlv_TEXCOORD2.z / xlv_TEXCOORD2.w)
  )), lightShadowDataX_4);
  tmpvar_3 = tmpvar_8;
  mediump vec3 lm_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_9 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = vec3((tmpvar_3 * 2.0));
  mediump vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_2 * min (lm_9, tmpvar_11));
  c_1.xyz = tmpvar_12;
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  highp vec3 tmpvar_25;
  tmpvar_25 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - tmpvar_25.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - tmpvar_25.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - tmpvar_25.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * tmpvar_8.x) + (tmpvar_27 * tmpvar_8.y)) + (tmpvar_28 * tmpvar_8.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * unity_4LightAtten0)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_4 + ((
    ((unity_LightColor[0].xyz * tmpvar_30.x) + (unity_LightColor[1].xyz * tmpvar_30.y))
   + 
    (unity_LightColor[2].xyz * tmpvar_30.z)
  ) + (unity_LightColor[3].xyz * tmpvar_30.w)));
  tmpvar_4 = tmpvar_31;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 c_3;
  c_3.xyz = ((tmpvar_2 * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.w = c_3.w;
  c_1.xyz = (c_3.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  highp vec3 tmpvar_25;
  tmpvar_25 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - tmpvar_25.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - tmpvar_25.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - tmpvar_25.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * tmpvar_8.x) + (tmpvar_27 * tmpvar_8.y)) + (tmpvar_28 * tmpvar_8.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * unity_4LightAtten0)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_4 + ((
    ((unity_LightColor[0].xyz * tmpvar_30.x) + (unity_LightColor[1].xyz * tmpvar_30.y))
   + 
    (unity_LightColor[2].xyz * tmpvar_30.z)
  ) + (unity_LightColor[3].xyz * tmpvar_30.w)));
  tmpvar_4 = tmpvar_31;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 c_3;
  c_3.xyz = ((tmpvar_2 * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.w = c_3.w;
  c_1.xyz = (c_3.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - cse_25.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - cse_25.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - cse_25.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * tmpvar_8.x) + (tmpvar_27 * tmpvar_8.y)) + (tmpvar_28 * tmpvar_8.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * unity_4LightAtten0)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_4 + ((
    ((unity_LightColor[0].xyz * tmpvar_30.x) + (unity_LightColor[1].xyz * tmpvar_30.y))
   + 
    (unity_LightColor[2].xyz * tmpvar_30.z)
  ) + (unity_LightColor[3].xyz * tmpvar_30.w)));
  tmpvar_4 = tmpvar_31;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * cse_25);
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float tmpvar_3;
  mediump float lightShadowDataX_4;
  highp float dist_5;
  lowp float tmpvar_6;
  tmpvar_6 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  dist_5 = tmpvar_6;
  highp float tmpvar_7;
  tmpvar_7 = _LightShadowData.x;
  lightShadowDataX_4 = tmpvar_7;
  highp float tmpvar_8;
  tmpvar_8 = max (float((dist_5 > 
    (xlv_TEXCOORD3.z / xlv_TEXCOORD3.w)
  )), lightShadowDataX_4);
  tmpvar_3 = tmpvar_8;
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz))
   * tmpvar_3) * 2.0));
  c_9.w = 1.0;
  c_1.w = c_9.w;
  c_1.xyz = (c_9.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  lowp float tmpvar_4;
  tmpvar_4 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  highp float tmpvar_5;
  tmpvar_5 = (_LightShadowData.x + (tmpvar_4 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_5;
  lowp vec4 c_6;
  c_6.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz))
   * shadow_3) * 2.0));
  c_6.w = 1.0;
  c_1.w = c_6.w;
  c_1.xyz = (c_6.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  mediump float tmpvar_4;
  tmpvar_4 = texture (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  lowp float tmpvar_5;
  tmpvar_5 = tmpvar_4;
  highp float tmpvar_6;
  tmpvar_6 = (_LightShadowData.x + (tmpvar_5 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_6;
  lowp vec4 c_7;
  c_7.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz))
   * shadow_3) * 2.0));
  c_7.w = 1.0;
  c_1.w = c_7.w;
  c_1.xyz = (c_7.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp float shadow_2;
  lowp float tmpvar_3;
  tmpvar_3 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD2.xyz);
  highp float tmpvar_4;
  tmpvar_4 = (_LightShadowData.x + (tmpvar_3 * (1.0 - _LightShadowData.x)));
  shadow_2 = tmpvar_4;
  c_1.xyz = ((mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz) * min ((2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz), vec3((shadow_2 * 2.0))));
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp float shadow_2;
  mediump float tmpvar_3;
  tmpvar_3 = texture (_ShadowMapTexture, xlv_TEXCOORD2.xyz);
  lowp float tmpvar_4;
  tmpvar_4 = tmpvar_3;
  highp float tmpvar_5;
  tmpvar_5 = (_LightShadowData.x + (tmpvar_4 * (1.0 - _LightShadowData.x)));
  shadow_2 = tmpvar_5;
  c_1.xyz = ((mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz) * min ((2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz), vec3((shadow_2 * 2.0))));
  c_1.w = 1.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_DUMMY" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  lowp float tmpvar_4;
  tmpvar_4 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD2.xyz);
  highp float tmpvar_5;
  tmpvar_5 = (_LightShadowData.x + (tmpvar_4 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_5;
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_6 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = vec3((shadow_3 * 2.0));
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_2 * min (lm_6, tmpvar_8));
  c_1.xyz = tmpvar_9;
  c_1.w = 1.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  mediump float tmpvar_4;
  tmpvar_4 = texture (_ShadowMapTexture, xlv_TEXCOORD2.xyz);
  lowp float tmpvar_5;
  tmpvar_5 = tmpvar_4;
  highp float tmpvar_6;
  tmpvar_6 = (_LightShadowData.x + (tmpvar_5 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_6;
  mediump vec3 lm_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_7 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = vec3((shadow_3 * 2.0));
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_2 * min (lm_7, tmpvar_9));
  c_1.xyz = tmpvar_10;
  c_1.w = 1.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_DUMMY" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - cse_25.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - cse_25.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - cse_25.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * tmpvar_8.x) + (tmpvar_27 * tmpvar_8.y)) + (tmpvar_28 * tmpvar_8.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * unity_4LightAtten0)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_4 + ((
    ((unity_LightColor[0].xyz * tmpvar_30.x) + (unity_LightColor[1].xyz * tmpvar_30.y))
   + 
    (unity_LightColor[2].xyz * tmpvar_30.z)
  ) + (unity_LightColor[3].xyz * tmpvar_30.w)));
  tmpvar_4 = tmpvar_31;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * cse_25);
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  lowp float tmpvar_4;
  tmpvar_4 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  highp float tmpvar_5;
  tmpvar_5 = (_LightShadowData.x + (tmpvar_4 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_5;
  lowp vec4 c_6;
  c_6.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz))
   * shadow_3) * 2.0));
  c_6.w = 1.0;
  c_1.w = c_6.w;
  c_1.xyz = (c_6.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - cse_25.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - cse_25.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - cse_25.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * tmpvar_8.x) + (tmpvar_27 * tmpvar_8.y)) + (tmpvar_28 * tmpvar_8.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * unity_4LightAtten0)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_4 + ((
    ((unity_LightColor[0].xyz * tmpvar_30.x) + (unity_LightColor[1].xyz * tmpvar_30.y))
   + 
    (unity_LightColor[2].xyz * tmpvar_30.z)
  ) + (unity_LightColor[3].xyz * tmpvar_30.w)));
  tmpvar_4 = tmpvar_31;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * cse_25);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  mediump float tmpvar_4;
  tmpvar_4 = texture (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  lowp float tmpvar_5;
  tmpvar_5 = tmpvar_4;
  highp float tmpvar_6;
  tmpvar_6 = (_LightShadowData.x + (tmpvar_5 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_6;
  lowp vec4 c_7;
  c_7.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz))
   * shadow_3) * 2.0));
  c_7.w = 1.0;
  c_1.w = c_7.w;
  c_1.xyz = (c_7.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 c_3;
  c_3.xyz = ((tmpvar_2 * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.w = c_3.w;
  c_1.xyz = (c_3.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float PointToEyeDist_6;
  mediump float fowLum_7;
  mediump vec2 fowUv_8;
  highp vec2 tmpvar_9;
  tmpvar_9 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_8 = tmpvar_9;
  lowp float tmpvar_10;
  tmpvar_10 = texture2D (_FogOfWar, fowUv_8).x;
  fowLum_7 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_12;
  tmpvar_12 = sqrt(dot (tmpvar_11, tmpvar_11));
  PointToEyeDist_6 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = clamp (((PointToEyeDist_6 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (((tmpvar_14 + 
    ((_FOWColor.xyz - tmpvar_14) * (tmpvar_13 * tmpvar_13))
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_7));
  color_4.xyz = tmpvar_15;
  c_1 = color_4;
  gl_FragData[0] = color_4;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out lowp vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in lowp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 c_3;
  c_3.xyz = ((tmpvar_2 * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.w = c_3.w;
  c_1.xyz = (c_3.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float PointToEyeDist_6;
  mediump float fowLum_7;
  mediump vec2 fowUv_8;
  highp vec2 tmpvar_9;
  tmpvar_9 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_8 = tmpvar_9;
  lowp float tmpvar_10;
  tmpvar_10 = texture (_FogOfWar, fowUv_8).x;
  fowLum_7 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_12;
  tmpvar_12 = sqrt(dot (tmpvar_11, tmpvar_11));
  PointToEyeDist_6 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = clamp (((PointToEyeDist_6 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (((tmpvar_14 + 
    ((_FOWColor.xyz - tmpvar_14) * (tmpvar_13 * tmpvar_13))
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_7));
  color_4.xyz = tmpvar_15;
  c_1 = color_4;
  _glesFragData[0] = color_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  c_1.xyz = ((mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz) * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz));
  c_1.w = 1.0;
  lowp vec4 color_2;
  color_2.w = c_1.w;
  mediump vec3 sceneColor_3;
  sceneColor_3 = c_1.xyz;
  mediump float PointToEyeDist_4;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture2D (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_10;
  tmpvar_10 = sqrt(dot (tmpvar_9, tmpvar_9));
  PointToEyeDist_4 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = clamp (((PointToEyeDist_4 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * (tmpvar_11 * tmpvar_11))
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_5));
  color_2.xyz = tmpvar_13;
  c_1 = color_2;
  gl_FragData[0] = color_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec2 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  c_1.xyz = ((mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz) * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz));
  c_1.w = 1.0;
  lowp vec4 color_2;
  color_2.w = c_1.w;
  mediump vec3 sceneColor_3;
  sceneColor_3 = c_1.xyz;
  mediump float PointToEyeDist_4;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_10;
  tmpvar_10 = sqrt(dot (tmpvar_9, tmpvar_9));
  PointToEyeDist_4 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = clamp (((PointToEyeDist_4 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * (tmpvar_11 * tmpvar_11))
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_5));
  color_2.xyz = tmpvar_13;
  c_1 = color_2;
  _glesFragData[0] = color_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  mediump vec3 lm_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_3 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_2 * lm_3);
  c_1.xyz = tmpvar_5;
  c_1.w = 1.0;
  lowp vec4 color_6;
  color_6.w = c_1.w;
  mediump vec3 sceneColor_7;
  sceneColor_7 = c_1.xyz;
  mediump float PointToEyeDist_8;
  mediump float fowLum_9;
  mediump vec2 fowUv_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_10 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = texture2D (_FogOfWar, fowUv_10).x;
  fowLum_9 = tmpvar_12;
  highp vec3 tmpvar_13;
  tmpvar_13 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_14;
  tmpvar_14 = sqrt(dot (tmpvar_13, tmpvar_13));
  PointToEyeDist_8 = tmpvar_14;
  mediump float tmpvar_15;
  tmpvar_15 = clamp (((PointToEyeDist_8 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_16;
  tmpvar_16 = (sceneColor_7 * sceneColor_7);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (((tmpvar_16 + 
    ((_FOWColor.xyz - tmpvar_16) * (tmpvar_15 * tmpvar_15))
  ) * _FOWParams.z), sceneColor_7, vec3(fowLum_9));
  color_6.xyz = tmpvar_17;
  c_1 = color_6;
  gl_FragData[0] = color_6;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec2 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  mediump vec3 lm_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_3 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_2 * lm_3);
  c_1.xyz = tmpvar_5;
  c_1.w = 1.0;
  lowp vec4 color_6;
  color_6.w = c_1.w;
  mediump vec3 sceneColor_7;
  sceneColor_7 = c_1.xyz;
  mediump float PointToEyeDist_8;
  mediump float fowLum_9;
  mediump vec2 fowUv_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_10 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = texture (_FogOfWar, fowUv_10).x;
  fowLum_9 = tmpvar_12;
  highp vec3 tmpvar_13;
  tmpvar_13 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_14;
  tmpvar_14 = sqrt(dot (tmpvar_13, tmpvar_13));
  PointToEyeDist_8 = tmpvar_14;
  mediump float tmpvar_15;
  tmpvar_15 = clamp (((PointToEyeDist_8 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_16;
  tmpvar_16 = (sceneColor_7 * sceneColor_7);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (((tmpvar_16 + 
    ((_FOWColor.xyz - tmpvar_16) * (tmpvar_15 * tmpvar_15))
  ) * _FOWParams.z), sceneColor_7, vec3(fowLum_9));
  color_6.xyz = tmpvar_17;
  c_1 = color_6;
  _glesFragData[0] = color_6;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * cse_25);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float tmpvar_3;
  mediump float lightShadowDataX_4;
  highp float dist_5;
  lowp float tmpvar_6;
  tmpvar_6 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
  dist_5 = tmpvar_6;
  highp float tmpvar_7;
  tmpvar_7 = _LightShadowData.x;
  lightShadowDataX_4 = tmpvar_7;
  highp float tmpvar_8;
  tmpvar_8 = max (float((dist_5 > 
    (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w)
  )), lightShadowDataX_4);
  tmpvar_3 = tmpvar_8;
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz))
   * tmpvar_3) * 2.0));
  c_9.w = 1.0;
  c_1.w = c_9.w;
  c_1.xyz = (c_9.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_10;
  color_10.w = c_1.w;
  mediump vec3 sceneColor_11;
  sceneColor_11 = c_1.xyz;
  mediump float PointToEyeDist_12;
  mediump float fowLum_13;
  mediump vec2 fowUv_14;
  highp vec2 tmpvar_15;
  tmpvar_15 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_14 = tmpvar_15;
  lowp float tmpvar_16;
  tmpvar_16 = texture2D (_FogOfWar, fowUv_14).x;
  fowLum_13 = tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_18;
  tmpvar_18 = sqrt(dot (tmpvar_17, tmpvar_17));
  PointToEyeDist_12 = tmpvar_18;
  mediump float tmpvar_19;
  tmpvar_19 = clamp (((PointToEyeDist_12 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_20;
  tmpvar_20 = (sceneColor_11 * sceneColor_11);
  mediump vec3 tmpvar_21;
  tmpvar_21 = mix (((tmpvar_20 + 
    ((_FOWColor.xyz - tmpvar_20) * (tmpvar_19 * tmpvar_19))
  ) * _FOWParams.z), sceneColor_11, vec3(fowLum_13));
  color_10.xyz = tmpvar_21;
  c_1 = color_10;
  gl_FragData[0] = color_10;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  highp vec4 cse_4;
  cse_4 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_4.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * cse_4);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp float tmpvar_2;
  mediump float lightShadowDataX_3;
  highp float dist_4;
  lowp float tmpvar_5;
  tmpvar_5 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  dist_4 = tmpvar_5;
  highp float tmpvar_6;
  tmpvar_6 = _LightShadowData.x;
  lightShadowDataX_3 = tmpvar_6;
  highp float tmpvar_7;
  tmpvar_7 = max (float((dist_4 > 
    (xlv_TEXCOORD3.z / xlv_TEXCOORD3.w)
  )), lightShadowDataX_3);
  tmpvar_2 = tmpvar_7;
  c_1.xyz = ((mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz) * min ((2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz), vec3((tmpvar_2 * 2.0))));
  c_1.w = 1.0;
  lowp vec4 color_8;
  color_8.w = c_1.w;
  mediump vec3 sceneColor_9;
  sceneColor_9 = c_1.xyz;
  mediump float PointToEyeDist_10;
  mediump float fowLum_11;
  mediump vec2 fowUv_12;
  highp vec2 tmpvar_13;
  tmpvar_13 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_12 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = texture2D (_FogOfWar, fowUv_12).x;
  fowLum_11 = tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_16;
  tmpvar_16 = sqrt(dot (tmpvar_15, tmpvar_15));
  PointToEyeDist_10 = tmpvar_16;
  mediump float tmpvar_17;
  tmpvar_17 = clamp (((PointToEyeDist_10 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_18;
  tmpvar_18 = (sceneColor_9 * sceneColor_9);
  mediump vec3 tmpvar_19;
  tmpvar_19 = mix (((tmpvar_18 + 
    ((_FOWColor.xyz - tmpvar_18) * (tmpvar_17 * tmpvar_17))
  ) * _FOWParams.z), sceneColor_9, vec3(fowLum_11));
  color_8.xyz = tmpvar_19;
  c_1 = color_8;
  gl_FragData[0] = color_8;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  highp vec4 cse_4;
  cse_4 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_4.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * cse_4);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float tmpvar_3;
  mediump float lightShadowDataX_4;
  highp float dist_5;
  lowp float tmpvar_6;
  tmpvar_6 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  dist_5 = tmpvar_6;
  highp float tmpvar_7;
  tmpvar_7 = _LightShadowData.x;
  lightShadowDataX_4 = tmpvar_7;
  highp float tmpvar_8;
  tmpvar_8 = max (float((dist_5 > 
    (xlv_TEXCOORD3.z / xlv_TEXCOORD3.w)
  )), lightShadowDataX_4);
  tmpvar_3 = tmpvar_8;
  mediump vec3 lm_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_9 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = vec3((tmpvar_3 * 2.0));
  mediump vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_2 * min (lm_9, tmpvar_11));
  c_1.xyz = tmpvar_12;
  c_1.w = 1.0;
  lowp vec4 color_13;
  color_13.w = c_1.w;
  mediump vec3 sceneColor_14;
  sceneColor_14 = c_1.xyz;
  mediump float PointToEyeDist_15;
  mediump float fowLum_16;
  mediump vec2 fowUv_17;
  highp vec2 tmpvar_18;
  tmpvar_18 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_17 = tmpvar_18;
  lowp float tmpvar_19;
  tmpvar_19 = texture2D (_FogOfWar, fowUv_17).x;
  fowLum_16 = tmpvar_19;
  highp vec3 tmpvar_20;
  tmpvar_20 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_21;
  tmpvar_21 = sqrt(dot (tmpvar_20, tmpvar_20));
  PointToEyeDist_15 = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = clamp (((PointToEyeDist_15 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_23;
  tmpvar_23 = (sceneColor_14 * sceneColor_14);
  mediump vec3 tmpvar_24;
  tmpvar_24 = mix (((tmpvar_23 + 
    ((_FOWColor.xyz - tmpvar_23) * (tmpvar_22 * tmpvar_22))
  ) * _FOWParams.z), sceneColor_14, vec3(fowLum_16));
  color_13.xyz = tmpvar_24;
  c_1 = color_13;
  gl_FragData[0] = color_13;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - cse_25.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - cse_25.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - cse_25.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * tmpvar_8.x) + (tmpvar_27 * tmpvar_8.y)) + (tmpvar_28 * tmpvar_8.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * unity_4LightAtten0)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_4 + ((
    ((unity_LightColor[0].xyz * tmpvar_30.x) + (unity_LightColor[1].xyz * tmpvar_30.y))
   + 
    (unity_LightColor[2].xyz * tmpvar_30.z)
  ) + (unity_LightColor[3].xyz * tmpvar_30.w)));
  tmpvar_4 = tmpvar_31;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 c_3;
  c_3.xyz = ((tmpvar_2 * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.w = c_3.w;
  c_1.xyz = (c_3.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float PointToEyeDist_6;
  mediump float fowLum_7;
  mediump vec2 fowUv_8;
  highp vec2 tmpvar_9;
  tmpvar_9 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_8 = tmpvar_9;
  lowp float tmpvar_10;
  tmpvar_10 = texture2D (_FogOfWar, fowUv_8).x;
  fowLum_7 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_12;
  tmpvar_12 = sqrt(dot (tmpvar_11, tmpvar_11));
  PointToEyeDist_6 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = clamp (((PointToEyeDist_6 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (((tmpvar_14 + 
    ((_FOWColor.xyz - tmpvar_14) * (tmpvar_13 * tmpvar_13))
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_7));
  color_4.xyz = tmpvar_15;
  c_1 = color_4;
  gl_FragData[0] = color_4;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out lowp vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - cse_25.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - cse_25.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - cse_25.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * tmpvar_8.x) + (tmpvar_27 * tmpvar_8.y)) + (tmpvar_28 * tmpvar_8.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * unity_4LightAtten0)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_4 + ((
    ((unity_LightColor[0].xyz * tmpvar_30.x) + (unity_LightColor[1].xyz * tmpvar_30.y))
   + 
    (unity_LightColor[2].xyz * tmpvar_30.z)
  ) + (unity_LightColor[3].xyz * tmpvar_30.w)));
  tmpvar_4 = tmpvar_31;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in lowp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 c_3;
  c_3.xyz = ((tmpvar_2 * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.w = c_3.w;
  c_1.xyz = (c_3.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float PointToEyeDist_6;
  mediump float fowLum_7;
  mediump vec2 fowUv_8;
  highp vec2 tmpvar_9;
  tmpvar_9 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_8 = tmpvar_9;
  lowp float tmpvar_10;
  tmpvar_10 = texture (_FogOfWar, fowUv_8).x;
  fowLum_7 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_12;
  tmpvar_12 = sqrt(dot (tmpvar_11, tmpvar_11));
  PointToEyeDist_6 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = clamp (((PointToEyeDist_6 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (((tmpvar_14 + 
    ((_FOWColor.xyz - tmpvar_14) * (tmpvar_13 * tmpvar_13))
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_7));
  color_4.xyz = tmpvar_15;
  c_1 = color_4;
  _glesFragData[0] = color_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - cse_25.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - cse_25.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - cse_25.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * tmpvar_8.x) + (tmpvar_27 * tmpvar_8.y)) + (tmpvar_28 * tmpvar_8.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * unity_4LightAtten0)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_4 + ((
    ((unity_LightColor[0].xyz * tmpvar_30.x) + (unity_LightColor[1].xyz * tmpvar_30.y))
   + 
    (unity_LightColor[2].xyz * tmpvar_30.z)
  ) + (unity_LightColor[3].xyz * tmpvar_30.w)));
  tmpvar_4 = tmpvar_31;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * cse_25);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float tmpvar_3;
  mediump float lightShadowDataX_4;
  highp float dist_5;
  lowp float tmpvar_6;
  tmpvar_6 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
  dist_5 = tmpvar_6;
  highp float tmpvar_7;
  tmpvar_7 = _LightShadowData.x;
  lightShadowDataX_4 = tmpvar_7;
  highp float tmpvar_8;
  tmpvar_8 = max (float((dist_5 > 
    (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w)
  )), lightShadowDataX_4);
  tmpvar_3 = tmpvar_8;
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz))
   * tmpvar_3) * 2.0));
  c_9.w = 1.0;
  c_1.w = c_9.w;
  c_1.xyz = (c_9.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_10;
  color_10.w = c_1.w;
  mediump vec3 sceneColor_11;
  sceneColor_11 = c_1.xyz;
  mediump float PointToEyeDist_12;
  mediump float fowLum_13;
  mediump vec2 fowUv_14;
  highp vec2 tmpvar_15;
  tmpvar_15 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_14 = tmpvar_15;
  lowp float tmpvar_16;
  tmpvar_16 = texture2D (_FogOfWar, fowUv_14).x;
  fowLum_13 = tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_18;
  tmpvar_18 = sqrt(dot (tmpvar_17, tmpvar_17));
  PointToEyeDist_12 = tmpvar_18;
  mediump float tmpvar_19;
  tmpvar_19 = clamp (((PointToEyeDist_12 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_20;
  tmpvar_20 = (sceneColor_11 * sceneColor_11);
  mediump vec3 tmpvar_21;
  tmpvar_21 = mix (((tmpvar_20 + 
    ((_FOWColor.xyz - tmpvar_20) * (tmpvar_19 * tmpvar_19))
  ) * _FOWParams.z), sceneColor_11, vec3(fowLum_13));
  color_10.xyz = tmpvar_21;
  c_1 = color_10;
  gl_FragData[0] = color_10;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * cse_25);
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  lowp float tmpvar_4;
  tmpvar_4 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  highp float tmpvar_5;
  tmpvar_5 = (_LightShadowData.x + (tmpvar_4 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_5;
  lowp vec4 c_6;
  c_6.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz))
   * shadow_3) * 2.0));
  c_6.w = 1.0;
  c_1.w = c_6.w;
  c_1.xyz = (c_6.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_7;
  color_7.w = c_1.w;
  mediump vec3 sceneColor_8;
  sceneColor_8 = c_1.xyz;
  mediump float PointToEyeDist_9;
  mediump float fowLum_10;
  mediump vec2 fowUv_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_11 = tmpvar_12;
  lowp float tmpvar_13;
  tmpvar_13 = texture2D (_FogOfWar, fowUv_11).x;
  fowLum_10 = tmpvar_13;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_15;
  tmpvar_15 = sqrt(dot (tmpvar_14, tmpvar_14));
  PointToEyeDist_9 = tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = clamp (((PointToEyeDist_9 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_17;
  tmpvar_17 = (sceneColor_8 * sceneColor_8);
  mediump vec3 tmpvar_18;
  tmpvar_18 = mix (((tmpvar_17 + 
    ((_FOWColor.xyz - tmpvar_17) * (tmpvar_16 * tmpvar_16))
  ) * _FOWParams.z), sceneColor_8, vec3(fowLum_10));
  color_7.xyz = tmpvar_18;
  c_1 = color_7;
  gl_FragData[0] = color_7;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out lowp vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * cse_25);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in lowp vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  mediump float tmpvar_4;
  tmpvar_4 = texture (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  lowp float tmpvar_5;
  tmpvar_5 = tmpvar_4;
  highp float tmpvar_6;
  tmpvar_6 = (_LightShadowData.x + (tmpvar_5 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_6;
  lowp vec4 c_7;
  c_7.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz))
   * shadow_3) * 2.0));
  c_7.w = 1.0;
  c_1.w = c_7.w;
  c_1.xyz = (c_7.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_8;
  color_8.w = c_1.w;
  mediump vec3 sceneColor_9;
  sceneColor_9 = c_1.xyz;
  mediump float PointToEyeDist_10;
  mediump float fowLum_11;
  mediump vec2 fowUv_12;
  highp vec2 tmpvar_13;
  tmpvar_13 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_12 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = texture (_FogOfWar, fowUv_12).x;
  fowLum_11 = tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_16;
  tmpvar_16 = sqrt(dot (tmpvar_15, tmpvar_15));
  PointToEyeDist_10 = tmpvar_16;
  mediump float tmpvar_17;
  tmpvar_17 = clamp (((PointToEyeDist_10 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_18;
  tmpvar_18 = (sceneColor_9 * sceneColor_9);
  mediump vec3 tmpvar_19;
  tmpvar_19 = mix (((tmpvar_18 + 
    ((_FOWColor.xyz - tmpvar_18) * (tmpvar_17 * tmpvar_17))
  ) * _FOWParams.z), sceneColor_9, vec3(fowLum_11));
  color_8.xyz = tmpvar_19;
  c_1 = color_8;
  _glesFragData[0] = color_8;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  highp vec4 cse_4;
  cse_4 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_4.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * cse_4);
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp float shadow_2;
  lowp float tmpvar_3;
  tmpvar_3 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  highp float tmpvar_4;
  tmpvar_4 = (_LightShadowData.x + (tmpvar_3 * (1.0 - _LightShadowData.x)));
  shadow_2 = tmpvar_4;
  c_1.xyz = ((mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz) * min ((2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz), vec3((shadow_2 * 2.0))));
  c_1.w = 1.0;
  lowp vec4 color_5;
  color_5.w = c_1.w;
  mediump vec3 sceneColor_6;
  sceneColor_6 = c_1.xyz;
  mediump float PointToEyeDist_7;
  mediump float fowLum_8;
  mediump vec2 fowUv_9;
  highp vec2 tmpvar_10;
  tmpvar_10 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_9 = tmpvar_10;
  lowp float tmpvar_11;
  tmpvar_11 = texture2D (_FogOfWar, fowUv_9).x;
  fowLum_8 = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_13;
  tmpvar_13 = sqrt(dot (tmpvar_12, tmpvar_12));
  PointToEyeDist_7 = tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = clamp (((PointToEyeDist_7 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (sceneColor_6 * sceneColor_6);
  mediump vec3 tmpvar_16;
  tmpvar_16 = mix (((tmpvar_15 + 
    ((_FOWColor.xyz - tmpvar_15) * (tmpvar_14 * tmpvar_14))
  ) * _FOWParams.z), sceneColor_6, vec3(fowLum_8));
  color_5.xyz = tmpvar_16;
  c_1 = color_5;
  gl_FragData[0] = color_5;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec2 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  highp vec4 cse_4;
  cse_4 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_4.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * cse_4);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec2 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp float shadow_2;
  mediump float tmpvar_3;
  tmpvar_3 = texture (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  lowp float tmpvar_4;
  tmpvar_4 = tmpvar_3;
  highp float tmpvar_5;
  tmpvar_5 = (_LightShadowData.x + (tmpvar_4 * (1.0 - _LightShadowData.x)));
  shadow_2 = tmpvar_5;
  c_1.xyz = ((mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz) * min ((2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz), vec3((shadow_2 * 2.0))));
  c_1.w = 1.0;
  lowp vec4 color_6;
  color_6.w = c_1.w;
  mediump vec3 sceneColor_7;
  sceneColor_7 = c_1.xyz;
  mediump float PointToEyeDist_8;
  mediump float fowLum_9;
  mediump vec2 fowUv_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_10 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = texture (_FogOfWar, fowUv_10).x;
  fowLum_9 = tmpvar_12;
  highp vec3 tmpvar_13;
  tmpvar_13 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_14;
  tmpvar_14 = sqrt(dot (tmpvar_13, tmpvar_13));
  PointToEyeDist_8 = tmpvar_14;
  mediump float tmpvar_15;
  tmpvar_15 = clamp (((PointToEyeDist_8 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_16;
  tmpvar_16 = (sceneColor_7 * sceneColor_7);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (((tmpvar_16 + 
    ((_FOWColor.xyz - tmpvar_16) * (tmpvar_15 * tmpvar_15))
  ) * _FOWParams.z), sceneColor_7, vec3(fowLum_9));
  color_6.xyz = tmpvar_17;
  c_1 = color_6;
  _glesFragData[0] = color_6;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  highp vec4 cse_4;
  cse_4 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_4.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * cse_4);
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  lowp float tmpvar_4;
  tmpvar_4 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  highp float tmpvar_5;
  tmpvar_5 = (_LightShadowData.x + (tmpvar_4 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_5;
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_6 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = vec3((shadow_3 * 2.0));
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_2 * min (lm_6, tmpvar_8));
  c_1.xyz = tmpvar_9;
  c_1.w = 1.0;
  lowp vec4 color_10;
  color_10.w = c_1.w;
  mediump vec3 sceneColor_11;
  sceneColor_11 = c_1.xyz;
  mediump float PointToEyeDist_12;
  mediump float fowLum_13;
  mediump vec2 fowUv_14;
  highp vec2 tmpvar_15;
  tmpvar_15 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_14 = tmpvar_15;
  lowp float tmpvar_16;
  tmpvar_16 = texture2D (_FogOfWar, fowUv_14).x;
  fowLum_13 = tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_18;
  tmpvar_18 = sqrt(dot (tmpvar_17, tmpvar_17));
  PointToEyeDist_12 = tmpvar_18;
  mediump float tmpvar_19;
  tmpvar_19 = clamp (((PointToEyeDist_12 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_20;
  tmpvar_20 = (sceneColor_11 * sceneColor_11);
  mediump vec3 tmpvar_21;
  tmpvar_21 = mix (((tmpvar_20 + 
    ((_FOWColor.xyz - tmpvar_20) * (tmpvar_19 * tmpvar_19))
  ) * _FOWParams.z), sceneColor_11, vec3(fowLum_13));
  color_10.xyz = tmpvar_21;
  c_1 = color_10;
  gl_FragData[0] = color_10;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec2 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  highp vec4 cse_4;
  cse_4 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_4.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * cse_4);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec2 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  mediump float tmpvar_4;
  tmpvar_4 = texture (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  lowp float tmpvar_5;
  tmpvar_5 = tmpvar_4;
  highp float tmpvar_6;
  tmpvar_6 = (_LightShadowData.x + (tmpvar_5 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_6;
  mediump vec3 lm_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_7 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = vec3((shadow_3 * 2.0));
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_2 * min (lm_7, tmpvar_9));
  c_1.xyz = tmpvar_10;
  c_1.w = 1.0;
  lowp vec4 color_11;
  color_11.w = c_1.w;
  mediump vec3 sceneColor_12;
  sceneColor_12 = c_1.xyz;
  mediump float PointToEyeDist_13;
  mediump float fowLum_14;
  mediump vec2 fowUv_15;
  highp vec2 tmpvar_16;
  tmpvar_16 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_15 = tmpvar_16;
  lowp float tmpvar_17;
  tmpvar_17 = texture (_FogOfWar, fowUv_15).x;
  fowLum_14 = tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_19;
  tmpvar_19 = sqrt(dot (tmpvar_18, tmpvar_18));
  PointToEyeDist_13 = tmpvar_19;
  mediump float tmpvar_20;
  tmpvar_20 = clamp (((PointToEyeDist_13 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_21;
  tmpvar_21 = (sceneColor_12 * sceneColor_12);
  mediump vec3 tmpvar_22;
  tmpvar_22 = mix (((tmpvar_21 + 
    ((_FOWColor.xyz - tmpvar_21) * (tmpvar_20 * tmpvar_20))
  ) * _FOWParams.z), sceneColor_12, vec3(fowLum_14));
  color_11.xyz = tmpvar_22;
  c_1 = color_11;
  _glesFragData[0] = color_11;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - cse_25.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - cse_25.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - cse_25.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * tmpvar_8.x) + (tmpvar_27 * tmpvar_8.y)) + (tmpvar_28 * tmpvar_8.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * unity_4LightAtten0)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_4 + ((
    ((unity_LightColor[0].xyz * tmpvar_30.x) + (unity_LightColor[1].xyz * tmpvar_30.y))
   + 
    (unity_LightColor[2].xyz * tmpvar_30.z)
  ) + (unity_LightColor[3].xyz * tmpvar_30.w)));
  tmpvar_4 = tmpvar_31;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * cse_25);
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  lowp float tmpvar_4;
  tmpvar_4 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  highp float tmpvar_5;
  tmpvar_5 = (_LightShadowData.x + (tmpvar_4 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_5;
  lowp vec4 c_6;
  c_6.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz))
   * shadow_3) * 2.0));
  c_6.w = 1.0;
  c_1.w = c_6.w;
  c_1.xyz = (c_6.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_7;
  color_7.w = c_1.w;
  mediump vec3 sceneColor_8;
  sceneColor_8 = c_1.xyz;
  mediump float PointToEyeDist_9;
  mediump float fowLum_10;
  mediump vec2 fowUv_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_11 = tmpvar_12;
  lowp float tmpvar_13;
  tmpvar_13 = texture2D (_FogOfWar, fowUv_11).x;
  fowLum_10 = tmpvar_13;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_15;
  tmpvar_15 = sqrt(dot (tmpvar_14, tmpvar_14));
  PointToEyeDist_9 = tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = clamp (((PointToEyeDist_9 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_17;
  tmpvar_17 = (sceneColor_8 * sceneColor_8);
  mediump vec3 tmpvar_18;
  tmpvar_18 = mix (((tmpvar_17 + 
    ((_FOWColor.xyz - tmpvar_17) * (tmpvar_16 * tmpvar_16))
  ) * _FOWParams.z), sceneColor_8, vec3(fowLum_10));
  color_7.xyz = tmpvar_18;
  c_1 = color_7;
  gl_FragData[0] = color_7;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out lowp vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - cse_25.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - cse_25.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - cse_25.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * tmpvar_8.x) + (tmpvar_27 * tmpvar_8.y)) + (tmpvar_28 * tmpvar_8.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * unity_4LightAtten0)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_4 + ((
    ((unity_LightColor[0].xyz * tmpvar_30.x) + (unity_LightColor[1].xyz * tmpvar_30.y))
   + 
    (unity_LightColor[2].xyz * tmpvar_30.z)
  ) + (unity_LightColor[3].xyz * tmpvar_30.w)));
  tmpvar_4 = tmpvar_31;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * cse_25);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in lowp vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  mediump float tmpvar_4;
  tmpvar_4 = texture (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  lowp float tmpvar_5;
  tmpvar_5 = tmpvar_4;
  highp float tmpvar_6;
  tmpvar_6 = (_LightShadowData.x + (tmpvar_5 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_6;
  lowp vec4 c_7;
  c_7.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz))
   * shadow_3) * 2.0));
  c_7.w = 1.0;
  c_1.w = c_7.w;
  c_1.xyz = (c_7.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_8;
  color_8.w = c_1.w;
  mediump vec3 sceneColor_9;
  sceneColor_9 = c_1.xyz;
  mediump float PointToEyeDist_10;
  mediump float fowLum_11;
  mediump vec2 fowUv_12;
  highp vec2 tmpvar_13;
  tmpvar_13 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_12 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = texture (_FogOfWar, fowUv_12).x;
  fowLum_11 = tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_16;
  tmpvar_16 = sqrt(dot (tmpvar_15, tmpvar_15));
  PointToEyeDist_10 = tmpvar_16;
  mediump float tmpvar_17;
  tmpvar_17 = clamp (((PointToEyeDist_10 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_18;
  tmpvar_18 = (sceneColor_9 * sceneColor_9);
  mediump vec3 tmpvar_19;
  tmpvar_19 = mix (((tmpvar_18 + 
    ((_FOWColor.xyz - tmpvar_18) * (tmpvar_17 * tmpvar_17))
  ) * _FOWParams.z), sceneColor_9, vec3(fowLum_11));
  color_8.xyz = tmpvar_19;
  c_1 = color_8;
  _glesFragData[0] = color_8;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 c_3;
  c_3.xyz = ((tmpvar_2 * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.w = c_3.w;
  c_1.xyz = (c_3.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float fowLum_6;
  mediump vec2 fowUv_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_7 = tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2D (_FogOfWar, fowUv_7).x;
  fowLum_6 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_11;
  tmpvar_11 = mix (((tmpvar_10 + 
    ((_FOWColor.xyz - tmpvar_10) * 0.85)
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_6));
  color_4.xyz = tmpvar_11;
  c_1 = color_4;
  gl_FragData[0] = color_4;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out lowp vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in lowp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 c_3;
  c_3.xyz = ((tmpvar_2 * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.w = c_3.w;
  c_1.xyz = (c_3.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float fowLum_6;
  mediump vec2 fowUv_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_7 = tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture (_FogOfWar, fowUv_7).x;
  fowLum_6 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_11;
  tmpvar_11 = mix (((tmpvar_10 + 
    ((_FOWColor.xyz - tmpvar_10) * 0.85)
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_6));
  color_4.xyz = tmpvar_11;
  c_1 = color_4;
  _glesFragData[0] = color_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  c_1.xyz = ((mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz) * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz));
  c_1.w = 1.0;
  lowp vec4 color_2;
  color_2.w = c_1.w;
  mediump vec3 sceneColor_3;
  sceneColor_3 = c_1.xyz;
  mediump float fowLum_4;
  mediump vec2 fowUv_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_5 = tmpvar_6;
  lowp float tmpvar_7;
  tmpvar_7 = texture2D (_FogOfWar, fowUv_5).x;
  fowLum_4 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_9;
  tmpvar_9 = mix (((tmpvar_8 + 
    ((_FOWColor.xyz - tmpvar_8) * 0.85)
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_4));
  color_2.xyz = tmpvar_9;
  c_1 = color_2;
  gl_FragData[0] = color_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec2 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  c_1.xyz = ((mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz) * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz));
  c_1.w = 1.0;
  lowp vec4 color_2;
  color_2.w = c_1.w;
  mediump vec3 sceneColor_3;
  sceneColor_3 = c_1.xyz;
  mediump float fowLum_4;
  mediump vec2 fowUv_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_5 = tmpvar_6;
  lowp float tmpvar_7;
  tmpvar_7 = texture (_FogOfWar, fowUv_5).x;
  fowLum_4 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_9;
  tmpvar_9 = mix (((tmpvar_8 + 
    ((_FOWColor.xyz - tmpvar_8) * 0.85)
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_4));
  color_2.xyz = tmpvar_9;
  c_1 = color_2;
  _glesFragData[0] = color_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  mediump vec3 lm_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_3 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_2 * lm_3);
  c_1.xyz = tmpvar_5;
  c_1.w = 1.0;
  lowp vec4 color_6;
  color_6.w = c_1.w;
  mediump vec3 sceneColor_7;
  sceneColor_7 = c_1.xyz;
  mediump float fowLum_8;
  mediump vec2 fowUv_9;
  highp vec2 tmpvar_10;
  tmpvar_10 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_9 = tmpvar_10;
  lowp float tmpvar_11;
  tmpvar_11 = texture2D (_FogOfWar, fowUv_9).x;
  fowLum_8 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_7 * sceneColor_7);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * 0.85)
  ) * _FOWParams.z), sceneColor_7, vec3(fowLum_8));
  color_6.xyz = tmpvar_13;
  c_1 = color_6;
  gl_FragData[0] = color_6;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec2 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  mediump vec3 lm_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_3 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_2 * lm_3);
  c_1.xyz = tmpvar_5;
  c_1.w = 1.0;
  lowp vec4 color_6;
  color_6.w = c_1.w;
  mediump vec3 sceneColor_7;
  sceneColor_7 = c_1.xyz;
  mediump float fowLum_8;
  mediump vec2 fowUv_9;
  highp vec2 tmpvar_10;
  tmpvar_10 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_9 = tmpvar_10;
  lowp float tmpvar_11;
  tmpvar_11 = texture (_FogOfWar, fowUv_9).x;
  fowLum_8 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_7 * sceneColor_7);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * 0.85)
  ) * _FOWParams.z), sceneColor_7, vec3(fowLum_8));
  color_6.xyz = tmpvar_13;
  c_1 = color_6;
  _glesFragData[0] = color_6;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * cse_25);
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float tmpvar_3;
  mediump float lightShadowDataX_4;
  highp float dist_5;
  lowp float tmpvar_6;
  tmpvar_6 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
  dist_5 = tmpvar_6;
  highp float tmpvar_7;
  tmpvar_7 = _LightShadowData.x;
  lightShadowDataX_4 = tmpvar_7;
  highp float tmpvar_8;
  tmpvar_8 = max (float((dist_5 > 
    (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w)
  )), lightShadowDataX_4);
  tmpvar_3 = tmpvar_8;
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz))
   * tmpvar_3) * 2.0));
  c_9.w = 1.0;
  c_1.w = c_9.w;
  c_1.xyz = (c_9.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_10;
  color_10.w = c_1.w;
  mediump vec3 sceneColor_11;
  sceneColor_11 = c_1.xyz;
  mediump float fowLum_12;
  mediump vec2 fowUv_13;
  highp vec2 tmpvar_14;
  tmpvar_14 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_13 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = texture2D (_FogOfWar, fowUv_13).x;
  fowLum_12 = tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_16 = (sceneColor_11 * sceneColor_11);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (((tmpvar_16 + 
    ((_FOWColor.xyz - tmpvar_16) * 0.85)
  ) * _FOWParams.z), sceneColor_11, vec3(fowLum_12));
  color_10.xyz = tmpvar_17;
  c_1 = color_10;
  gl_FragData[0] = color_10;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  highp vec4 cse_4;
  cse_4 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_4.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * cse_4);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp float tmpvar_2;
  mediump float lightShadowDataX_3;
  highp float dist_4;
  lowp float tmpvar_5;
  tmpvar_5 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  dist_4 = tmpvar_5;
  highp float tmpvar_6;
  tmpvar_6 = _LightShadowData.x;
  lightShadowDataX_3 = tmpvar_6;
  highp float tmpvar_7;
  tmpvar_7 = max (float((dist_4 > 
    (xlv_TEXCOORD3.z / xlv_TEXCOORD3.w)
  )), lightShadowDataX_3);
  tmpvar_2 = tmpvar_7;
  c_1.xyz = ((mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz) * min ((2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz), vec3((tmpvar_2 * 2.0))));
  c_1.w = 1.0;
  lowp vec4 color_8;
  color_8.w = c_1.w;
  mediump vec3 sceneColor_9;
  sceneColor_9 = c_1.xyz;
  mediump float fowLum_10;
  mediump vec2 fowUv_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_11 = tmpvar_12;
  lowp float tmpvar_13;
  tmpvar_13 = texture2D (_FogOfWar, fowUv_11).x;
  fowLum_10 = tmpvar_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (sceneColor_9 * sceneColor_9);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (((tmpvar_14 + 
    ((_FOWColor.xyz - tmpvar_14) * 0.85)
  ) * _FOWParams.z), sceneColor_9, vec3(fowLum_10));
  color_8.xyz = tmpvar_15;
  c_1 = color_8;
  gl_FragData[0] = color_8;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  highp vec4 cse_4;
  cse_4 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_4.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * cse_4);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float tmpvar_3;
  mediump float lightShadowDataX_4;
  highp float dist_5;
  lowp float tmpvar_6;
  tmpvar_6 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  dist_5 = tmpvar_6;
  highp float tmpvar_7;
  tmpvar_7 = _LightShadowData.x;
  lightShadowDataX_4 = tmpvar_7;
  highp float tmpvar_8;
  tmpvar_8 = max (float((dist_5 > 
    (xlv_TEXCOORD3.z / xlv_TEXCOORD3.w)
  )), lightShadowDataX_4);
  tmpvar_3 = tmpvar_8;
  mediump vec3 lm_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_9 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = vec3((tmpvar_3 * 2.0));
  mediump vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_2 * min (lm_9, tmpvar_11));
  c_1.xyz = tmpvar_12;
  c_1.w = 1.0;
  lowp vec4 color_13;
  color_13.w = c_1.w;
  mediump vec3 sceneColor_14;
  sceneColor_14 = c_1.xyz;
  mediump float fowLum_15;
  mediump vec2 fowUv_16;
  highp vec2 tmpvar_17;
  tmpvar_17 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = texture2D (_FogOfWar, fowUv_16).x;
  fowLum_15 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = (sceneColor_14 * sceneColor_14);
  mediump vec3 tmpvar_20;
  tmpvar_20 = mix (((tmpvar_19 + 
    ((_FOWColor.xyz - tmpvar_19) * 0.85)
  ) * _FOWParams.z), sceneColor_14, vec3(fowLum_15));
  color_13.xyz = tmpvar_20;
  c_1 = color_13;
  gl_FragData[0] = color_13;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - cse_25.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - cse_25.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - cse_25.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * tmpvar_8.x) + (tmpvar_27 * tmpvar_8.y)) + (tmpvar_28 * tmpvar_8.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * unity_4LightAtten0)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_4 + ((
    ((unity_LightColor[0].xyz * tmpvar_30.x) + (unity_LightColor[1].xyz * tmpvar_30.y))
   + 
    (unity_LightColor[2].xyz * tmpvar_30.z)
  ) + (unity_LightColor[3].xyz * tmpvar_30.w)));
  tmpvar_4 = tmpvar_31;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 c_3;
  c_3.xyz = ((tmpvar_2 * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.w = c_3.w;
  c_1.xyz = (c_3.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float fowLum_6;
  mediump vec2 fowUv_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_7 = tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2D (_FogOfWar, fowUv_7).x;
  fowLum_6 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_11;
  tmpvar_11 = mix (((tmpvar_10 + 
    ((_FOWColor.xyz - tmpvar_10) * 0.85)
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_6));
  color_4.xyz = tmpvar_11;
  c_1 = color_4;
  gl_FragData[0] = color_4;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out lowp vec3 xlv_TEXCOORD3;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - cse_25.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - cse_25.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - cse_25.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * tmpvar_8.x) + (tmpvar_27 * tmpvar_8.y)) + (tmpvar_28 * tmpvar_8.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * unity_4LightAtten0)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_4 + ((
    ((unity_LightColor[0].xyz * tmpvar_30.x) + (unity_LightColor[1].xyz * tmpvar_30.y))
   + 
    (unity_LightColor[2].xyz * tmpvar_30.z)
  ) + (unity_LightColor[3].xyz * tmpvar_30.w)));
  tmpvar_4 = tmpvar_31;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _WorldSpaceLightPos0;
uniform lowp vec4 _LightColor0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in lowp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 c_3;
  c_3.xyz = ((tmpvar_2 * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.w = c_3.w;
  c_1.xyz = (c_3.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float fowLum_6;
  mediump vec2 fowUv_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_7 = tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture (_FogOfWar, fowUv_7).x;
  fowLum_6 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_11;
  tmpvar_11 = mix (((tmpvar_10 + 
    ((_FOWColor.xyz - tmpvar_10) * 0.85)
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_6));
  color_4.xyz = tmpvar_11;
  c_1 = color_4;
  _glesFragData[0] = color_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - cse_25.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - cse_25.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - cse_25.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * tmpvar_8.x) + (tmpvar_27 * tmpvar_8.y)) + (tmpvar_28 * tmpvar_8.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * unity_4LightAtten0)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_4 + ((
    ((unity_LightColor[0].xyz * tmpvar_30.x) + (unity_LightColor[1].xyz * tmpvar_30.y))
   + 
    (unity_LightColor[2].xyz * tmpvar_30.z)
  ) + (unity_LightColor[3].xyz * tmpvar_30.w)));
  tmpvar_4 = tmpvar_31;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * cse_25);
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float tmpvar_3;
  mediump float lightShadowDataX_4;
  highp float dist_5;
  lowp float tmpvar_6;
  tmpvar_6 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
  dist_5 = tmpvar_6;
  highp float tmpvar_7;
  tmpvar_7 = _LightShadowData.x;
  lightShadowDataX_4 = tmpvar_7;
  highp float tmpvar_8;
  tmpvar_8 = max (float((dist_5 > 
    (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w)
  )), lightShadowDataX_4);
  tmpvar_3 = tmpvar_8;
  lowp vec4 c_9;
  c_9.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz))
   * tmpvar_3) * 2.0));
  c_9.w = 1.0;
  c_1.w = c_9.w;
  c_1.xyz = (c_9.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_10;
  color_10.w = c_1.w;
  mediump vec3 sceneColor_11;
  sceneColor_11 = c_1.xyz;
  mediump float fowLum_12;
  mediump vec2 fowUv_13;
  highp vec2 tmpvar_14;
  tmpvar_14 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_13 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = texture2D (_FogOfWar, fowUv_13).x;
  fowLum_12 = tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_16 = (sceneColor_11 * sceneColor_11);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (((tmpvar_16 + 
    ((_FOWColor.xyz - tmpvar_16) * 0.85)
  ) * _FOWParams.z), sceneColor_11, vec3(fowLum_12));
  color_10.xyz = tmpvar_17;
  c_1 = color_10;
  gl_FragData[0] = color_10;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * cse_25);
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  lowp float tmpvar_4;
  tmpvar_4 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  highp float tmpvar_5;
  tmpvar_5 = (_LightShadowData.x + (tmpvar_4 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_5;
  lowp vec4 c_6;
  c_6.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz))
   * shadow_3) * 2.0));
  c_6.w = 1.0;
  c_1.w = c_6.w;
  c_1.xyz = (c_6.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_7;
  color_7.w = c_1.w;
  mediump vec3 sceneColor_8;
  sceneColor_8 = c_1.xyz;
  mediump float fowLum_9;
  mediump vec2 fowUv_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_10 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = texture2D (_FogOfWar, fowUv_10).x;
  fowLum_9 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (sceneColor_8 * sceneColor_8);
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (((tmpvar_13 + 
    ((_FOWColor.xyz - tmpvar_13) * 0.85)
  ) * _FOWParams.z), sceneColor_8, vec3(fowLum_9));
  color_7.xyz = tmpvar_14;
  c_1 = color_7;
  gl_FragData[0] = color_7;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out lowp vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * cse_25);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in lowp vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  mediump float tmpvar_4;
  tmpvar_4 = texture (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  lowp float tmpvar_5;
  tmpvar_5 = tmpvar_4;
  highp float tmpvar_6;
  tmpvar_6 = (_LightShadowData.x + (tmpvar_5 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_6;
  lowp vec4 c_7;
  c_7.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz))
   * shadow_3) * 2.0));
  c_7.w = 1.0;
  c_1.w = c_7.w;
  c_1.xyz = (c_7.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_8;
  color_8.w = c_1.w;
  mediump vec3 sceneColor_9;
  sceneColor_9 = c_1.xyz;
  mediump float fowLum_10;
  mediump vec2 fowUv_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_11 = tmpvar_12;
  lowp float tmpvar_13;
  tmpvar_13 = texture (_FogOfWar, fowUv_11).x;
  fowLum_10 = tmpvar_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (sceneColor_9 * sceneColor_9);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (((tmpvar_14 + 
    ((_FOWColor.xyz - tmpvar_14) * 0.85)
  ) * _FOWParams.z), sceneColor_9, vec3(fowLum_10));
  color_8.xyz = tmpvar_15;
  c_1 = color_8;
  _glesFragData[0] = color_8;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  highp vec4 cse_4;
  cse_4 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_4.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * cse_4);
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp float shadow_2;
  lowp float tmpvar_3;
  tmpvar_3 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  highp float tmpvar_4;
  tmpvar_4 = (_LightShadowData.x + (tmpvar_3 * (1.0 - _LightShadowData.x)));
  shadow_2 = tmpvar_4;
  c_1.xyz = ((mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz) * min ((2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz), vec3((shadow_2 * 2.0))));
  c_1.w = 1.0;
  lowp vec4 color_5;
  color_5.w = c_1.w;
  mediump vec3 sceneColor_6;
  sceneColor_6 = c_1.xyz;
  mediump float fowLum_7;
  mediump vec2 fowUv_8;
  highp vec2 tmpvar_9;
  tmpvar_9 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_8 = tmpvar_9;
  lowp float tmpvar_10;
  tmpvar_10 = texture2D (_FogOfWar, fowUv_8).x;
  fowLum_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (sceneColor_6 * sceneColor_6);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (((tmpvar_11 + 
    ((_FOWColor.xyz - tmpvar_11) * 0.85)
  ) * _FOWParams.z), sceneColor_6, vec3(fowLum_7));
  color_5.xyz = tmpvar_12;
  c_1 = color_5;
  gl_FragData[0] = color_5;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec2 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  highp vec4 cse_4;
  cse_4 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_4.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * cse_4);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec2 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp float shadow_2;
  mediump float tmpvar_3;
  tmpvar_3 = texture (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  lowp float tmpvar_4;
  tmpvar_4 = tmpvar_3;
  highp float tmpvar_5;
  tmpvar_5 = (_LightShadowData.x + (tmpvar_4 * (1.0 - _LightShadowData.x)));
  shadow_2 = tmpvar_5;
  c_1.xyz = ((mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz) * min ((2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz), vec3((shadow_2 * 2.0))));
  c_1.w = 1.0;
  lowp vec4 color_6;
  color_6.w = c_1.w;
  mediump vec3 sceneColor_7;
  sceneColor_7 = c_1.xyz;
  mediump float fowLum_8;
  mediump vec2 fowUv_9;
  highp vec2 tmpvar_10;
  tmpvar_10 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_9 = tmpvar_10;
  lowp float tmpvar_11;
  tmpvar_11 = texture (_FogOfWar, fowUv_9).x;
  fowLum_8 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_7 * sceneColor_7);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * 0.85)
  ) * _FOWParams.z), sceneColor_7, vec3(fowLum_8));
  color_6.xyz = tmpvar_13;
  c_1 = color_6;
  _glesFragData[0] = color_6;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  highp vec4 cse_4;
  cse_4 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_4.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * cse_4);
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  lowp float tmpvar_4;
  tmpvar_4 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  highp float tmpvar_5;
  tmpvar_5 = (_LightShadowData.x + (tmpvar_4 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_5;
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_6 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = vec3((shadow_3 * 2.0));
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_2 * min (lm_6, tmpvar_8));
  c_1.xyz = tmpvar_9;
  c_1.w = 1.0;
  lowp vec4 color_10;
  color_10.w = c_1.w;
  mediump vec3 sceneColor_11;
  sceneColor_11 = c_1.xyz;
  mediump float fowLum_12;
  mediump vec2 fowUv_13;
  highp vec2 tmpvar_14;
  tmpvar_14 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_13 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = texture2D (_FogOfWar, fowUv_13).x;
  fowLum_12 = tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_16 = (sceneColor_11 * sceneColor_11);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (((tmpvar_16 + 
    ((_FOWColor.xyz - tmpvar_16) * 0.85)
  ) * _FOWParams.z), sceneColor_11, vec3(fowLum_12));
  color_10.xyz = tmpvar_17;
  c_1 = color_10;
  gl_FragData[0] = color_10;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec2 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  highp vec4 cse_4;
  cse_4 = (_Object2World * _glesVertex);
  xlv_TEXCOORD1 = cse_4.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * cse_4);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec2 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  mediump float tmpvar_4;
  tmpvar_4 = texture (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  lowp float tmpvar_5;
  tmpvar_5 = tmpvar_4;
  highp float tmpvar_6;
  tmpvar_6 = (_LightShadowData.x + (tmpvar_5 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_6;
  mediump vec3 lm_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_7 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = vec3((shadow_3 * 2.0));
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_2 * min (lm_7, tmpvar_9));
  c_1.xyz = tmpvar_10;
  c_1.w = 1.0;
  lowp vec4 color_11;
  color_11.w = c_1.w;
  mediump vec3 sceneColor_12;
  sceneColor_12 = c_1.xyz;
  mediump float fowLum_13;
  mediump vec2 fowUv_14;
  highp vec2 tmpvar_15;
  tmpvar_15 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_14 = tmpvar_15;
  lowp float tmpvar_16;
  tmpvar_16 = texture (_FogOfWar, fowUv_14).x;
  fowLum_13 = tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = (sceneColor_12 * sceneColor_12);
  mediump vec3 tmpvar_18;
  tmpvar_18 = mix (((tmpvar_17 + 
    ((_FOWColor.xyz - tmpvar_17) * 0.85)
  ) * _FOWParams.z), sceneColor_12, vec3(fowLum_13));
  color_11.xyz = tmpvar_18;
  c_1 = color_11;
  _glesFragData[0] = color_11;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - cse_25.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - cse_25.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - cse_25.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * tmpvar_8.x) + (tmpvar_27 * tmpvar_8.y)) + (tmpvar_28 * tmpvar_8.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * unity_4LightAtten0)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_4 + ((
    ((unity_LightColor[0].xyz * tmpvar_30.x) + (unity_LightColor[1].xyz * tmpvar_30.y))
   + 
    (unity_LightColor[2].xyz * tmpvar_30.z)
  ) + (unity_LightColor[3].xyz * tmpvar_30.w)));
  tmpvar_4 = tmpvar_31;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * cse_25);
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  lowp float tmpvar_4;
  tmpvar_4 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  highp float tmpvar_5;
  tmpvar_5 = (_LightShadowData.x + (tmpvar_4 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_5;
  lowp vec4 c_6;
  c_6.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz))
   * shadow_3) * 2.0));
  c_6.w = 1.0;
  c_1.w = c_6.w;
  c_1.xyz = (c_6.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_7;
  color_7.w = c_1.w;
  mediump vec3 sceneColor_8;
  sceneColor_8 = c_1.xyz;
  mediump float fowLum_9;
  mediump vec2 fowUv_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_10 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = texture2D (_FogOfWar, fowUv_10).x;
  fowLum_9 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (sceneColor_8 * sceneColor_8);
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (((tmpvar_13 + 
    ((_FOWColor.xyz - tmpvar_13) * 0.85)
  ) * _FOWParams.z), sceneColor_8, vec3(fowLum_9));
  color_7.xyz = tmpvar_14;
  c_1 = color_7;
  gl_FragData[0] = color_7;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out lowp vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec3 shlight_1;
  mediump vec4 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_2.xy = tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_2.zw = tmpvar_6;
  highp mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_3 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = tmpvar_8;
  mediump vec3 tmpvar_10;
  mediump vec4 normal_11;
  normal_11 = tmpvar_9;
  highp float vC_12;
  mediump vec3 x3_13;
  mediump vec3 x2_14;
  mediump vec3 x1_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAr, normal_11);
  x1_15.x = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAg, normal_11);
  x1_15.y = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAb, normal_11);
  x1_15.z = tmpvar_18;
  mediump vec4 tmpvar_19;
  tmpvar_19 = (normal_11.xyzz * normal_11.yzzx);
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBr, tmpvar_19);
  x2_14.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBg, tmpvar_19);
  x2_14.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBb, tmpvar_19);
  x2_14.z = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y));
  vC_12 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = (unity_SHC.xyz * vC_12);
  x3_13 = tmpvar_24;
  tmpvar_10 = ((x1_15 + x2_14) + x3_13);
  shlight_1 = tmpvar_10;
  tmpvar_4 = shlight_1;
  highp vec4 cse_25;
  cse_25 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosX0 - cse_25.x);
  highp vec4 tmpvar_27;
  tmpvar_27 = (unity_4LightPosY0 - cse_25.y);
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosZ0 - cse_25.z);
  highp vec4 tmpvar_29;
  tmpvar_29 = (((tmpvar_26 * tmpvar_26) + (tmpvar_27 * tmpvar_27)) + (tmpvar_28 * tmpvar_28));
  highp vec4 tmpvar_30;
  tmpvar_30 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_26 * tmpvar_8.x) + (tmpvar_27 * tmpvar_8.y)) + (tmpvar_28 * tmpvar_8.z))
   * 
    inversesqrt(tmpvar_29)
  )) * (1.0/((1.0 + 
    (tmpvar_29 * unity_4LightAtten0)
  ))));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_4 + ((
    ((unity_LightColor[0].xyz * tmpvar_30.x) + (unity_LightColor[1].xyz * tmpvar_30.y))
   + 
    (unity_LightColor[2].xyz * tmpvar_30.z)
  ) + (unity_LightColor[3].xyz * tmpvar_30.w)));
  tmpvar_4 = tmpvar_31;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = cse_25.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * cse_25);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in lowp vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  tmpvar_2 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp float shadow_3;
  mediump float tmpvar_4;
  tmpvar_4 = texture (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  lowp float tmpvar_5;
  tmpvar_5 = tmpvar_4;
  highp float tmpvar_6;
  tmpvar_6 = (_LightShadowData.x + (tmpvar_5 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_6;
  lowp vec4 c_7;
  c_7.xyz = ((tmpvar_2 * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, _WorldSpaceLightPos0.xyz))
   * shadow_3) * 2.0));
  c_7.w = 1.0;
  c_1.w = c_7.w;
  c_1.xyz = (c_7.xyz + (tmpvar_2 * xlv_TEXCOORD3));
  lowp vec4 color_8;
  color_8.w = c_1.w;
  mediump vec3 sceneColor_9;
  sceneColor_9 = c_1.xyz;
  mediump float fowLum_10;
  mediump vec2 fowUv_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_11 = tmpvar_12;
  lowp float tmpvar_13;
  tmpvar_13 = texture (_FogOfWar, fowUv_11).x;
  fowLum_10 = tmpvar_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (sceneColor_9 * sceneColor_9);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (((tmpvar_14 + 
    ((_FOWColor.xyz - tmpvar_14) * 0.85)
  ) * _FOWParams.z), sceneColor_9, vec3(fowLum_10));
  color_8.xyz = tmpvar_15;
  c_1 = color_8;
  _glesFragData[0] = color_8;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_DUMMY" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
}
 }
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Geometry+3" "RenderType"="Opaque" }
  ZWrite Off
  Fog {
   Color (0,0,0,0)
  }
  Blend One One
Program "vp" {
SubProgram "gles " {
Keywords { "POINT" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * cse_9).xyz;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_3;
  highp float tmpvar_4;
  tmpvar_4 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 c_5;
  c_5.xyz = (((
    mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD1, lightDir_2))
   * texture2D (_LightTexture0, vec2(tmpvar_4)).w) * 2.0));
  c_5.w = 1.0;
  c_1.xyz = c_5.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * cse_9).xyz;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_3;
  highp float tmpvar_4;
  tmpvar_4 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 c_5;
  c_5.xyz = (((
    mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD1, lightDir_2))
   * texture (_LightTexture0, vec2(tmpvar_4)).w) * 2.0));
  c_5.w = 1.0;
  c_1.xyz = c_5.xyz;
  c_1.w = 0.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lightDir_2 = xlv_TEXCOORD2;
  lowp vec4 c_3;
  c_3.xyz = (((
    mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD1, lightDir_2)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.xyz = c_3.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lightDir_2 = xlv_TEXCOORD2;
  lowp vec4 c_3;
  c_3.xyz = (((
    mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD1, lightDir_2)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.xyz = c_3.xyz;
  c_1.w = 0.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * cse_9);
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_3;
  highp vec2 P_4;
  P_4 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  highp float tmpvar_5;
  tmpvar_5 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  lowp float atten_6;
  atten_6 = ((float(
    (xlv_TEXCOORD3.z > 0.0)
  ) * texture2D (_LightTexture0, P_4).w) * texture2D (_LightTextureB0, vec2(tmpvar_5)).w);
  lowp vec4 c_7;
  c_7.xyz = (((
    mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD1, lightDir_2))
   * atten_6) * 2.0));
  c_7.w = 1.0;
  c_1.xyz = c_7.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "SPOT" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * cse_9);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_3;
  highp vec2 P_4;
  P_4 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  highp float tmpvar_5;
  tmpvar_5 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  lowp float atten_6;
  atten_6 = ((float(
    (xlv_TEXCOORD3.z > 0.0)
  ) * texture (_LightTexture0, P_4).w) * texture (_LightTextureB0, vec2(tmpvar_5)).w);
  lowp vec4 c_7;
  c_7.xyz = (((
    mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD1, lightDir_2))
   * atten_6) * 2.0));
  c_7.w = 1.0;
  c_1.xyz = c_7.xyz;
  c_1.w = 0.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * cse_9).xyz;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_3;
  highp float tmpvar_4;
  tmpvar_4 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 c_5;
  c_5.xyz = (((
    mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD1, lightDir_2))
   * 
    (texture2D (_LightTextureB0, vec2(tmpvar_4)).w * textureCube (_LightTexture0, xlv_TEXCOORD3).w)
  ) * 2.0));
  c_5.w = 1.0;
  c_1.xyz = c_5.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * cse_9).xyz;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_3;
  highp float tmpvar_4;
  tmpvar_4 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 c_5;
  c_5.xyz = (((
    mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD1, lightDir_2))
   * 
    (texture (_LightTextureB0, vec2(tmpvar_4)).w * texture (_LightTexture0, xlv_TEXCOORD3).w)
  ) * 2.0));
  c_5.w = 1.0;
  c_1.xyz = c_5.xyz;
  c_1.w = 0.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lightDir_2 = xlv_TEXCOORD2;
  lowp vec4 c_3;
  c_3.xyz = (((
    mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD1, lightDir_2))
   * texture2D (_LightTexture0, xlv_TEXCOORD3).w) * 2.0));
  c_3.w = 1.0;
  c_1.xyz = c_3.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lightDir_2 = xlv_TEXCOORD2;
  lowp vec4 c_3;
  c_3.xyz = (((
    mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD1, lightDir_2))
   * texture (_LightTexture0, xlv_TEXCOORD3).w) * 2.0));
  c_3.w = 1.0;
  c_1.xyz = c_3.xyz;
  c_1.w = 0.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9).xyz;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD3);
  lightDir_2 = tmpvar_3;
  highp float tmpvar_4;
  tmpvar_4 = dot (xlv_TEXCOORD4, xlv_TEXCOORD4);
  lowp vec4 c_5;
  c_5.xyz = (((
    mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * texture2D (_LightTexture0, vec2(tmpvar_4)).w) * 2.0));
  c_5.w = 1.0;
  c_1.xyz = c_5.xyz;
  c_1.w = 0.0;
  lowp vec4 color_6;
  color_6.w = c_1.w;
  mediump vec3 sceneColor_7;
  sceneColor_7 = c_1.xyz;
  mediump float PointToEyeDist_8;
  mediump float fowLum_9;
  mediump vec2 fowUv_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_10 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = texture2D (_FogOfWar, fowUv_10).x;
  fowLum_9 = tmpvar_12;
  highp vec3 tmpvar_13;
  tmpvar_13 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_14;
  tmpvar_14 = sqrt(dot (tmpvar_13, tmpvar_13));
  PointToEyeDist_8 = tmpvar_14;
  mediump float tmpvar_15;
  tmpvar_15 = clamp (((PointToEyeDist_8 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_16;
  tmpvar_16 = (sceneColor_7 * sceneColor_7);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (((tmpvar_16 + 
    ((_FOWColor.xyz - tmpvar_16) * (tmpvar_15 * tmpvar_15))
  ) * _FOWParams.z), sceneColor_7, vec3(fowLum_9));
  color_6.xyz = tmpvar_17;
  c_1 = color_6;
  gl_FragData[0] = color_6;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9).xyz;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD3);
  lightDir_2 = tmpvar_3;
  highp float tmpvar_4;
  tmpvar_4 = dot (xlv_TEXCOORD4, xlv_TEXCOORD4);
  lowp vec4 c_5;
  c_5.xyz = (((
    mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * texture (_LightTexture0, vec2(tmpvar_4)).w) * 2.0));
  c_5.w = 1.0;
  c_1.xyz = c_5.xyz;
  c_1.w = 0.0;
  lowp vec4 color_6;
  color_6.w = c_1.w;
  mediump vec3 sceneColor_7;
  sceneColor_7 = c_1.xyz;
  mediump float PointToEyeDist_8;
  mediump float fowLum_9;
  mediump vec2 fowUv_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_10 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = texture (_FogOfWar, fowUv_10).x;
  fowLum_9 = tmpvar_12;
  highp vec3 tmpvar_13;
  tmpvar_13 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_14;
  tmpvar_14 = sqrt(dot (tmpvar_13, tmpvar_13));
  PointToEyeDist_8 = tmpvar_14;
  mediump float tmpvar_15;
  tmpvar_15 = clamp (((PointToEyeDist_8 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_16;
  tmpvar_16 = (sceneColor_7 * sceneColor_7);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (((tmpvar_16 + 
    ((_FOWColor.xyz - tmpvar_16) * (tmpvar_15 * tmpvar_15))
  ) * _FOWParams.z), sceneColor_7, vec3(fowLum_9));
  color_6.xyz = tmpvar_17;
  c_1 = color_6;
  _glesFragData[0] = color_6;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _LightColor0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lightDir_2 = xlv_TEXCOORD3;
  lowp vec4 c_3;
  c_3.xyz = (((
    mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD2, lightDir_2)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.xyz = c_3.xyz;
  c_1.w = 0.0;
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float PointToEyeDist_6;
  mediump float fowLum_7;
  mediump vec2 fowUv_8;
  highp vec2 tmpvar_9;
  tmpvar_9 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_8 = tmpvar_9;
  lowp float tmpvar_10;
  tmpvar_10 = texture2D (_FogOfWar, fowUv_8).x;
  fowLum_7 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_12;
  tmpvar_12 = sqrt(dot (tmpvar_11, tmpvar_11));
  PointToEyeDist_6 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = clamp (((PointToEyeDist_6 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (((tmpvar_14 + 
    ((_FOWColor.xyz - tmpvar_14) * (tmpvar_13 * tmpvar_13))
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_7));
  color_4.xyz = tmpvar_15;
  c_1 = color_4;
  gl_FragData[0] = color_4;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _LightColor0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lightDir_2 = xlv_TEXCOORD3;
  lowp vec4 c_3;
  c_3.xyz = (((
    mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD2, lightDir_2)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.xyz = c_3.xyz;
  c_1.w = 0.0;
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float PointToEyeDist_6;
  mediump float fowLum_7;
  mediump vec2 fowUv_8;
  highp vec2 tmpvar_9;
  tmpvar_9 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_8 = tmpvar_9;
  lowp float tmpvar_10;
  tmpvar_10 = texture (_FogOfWar, fowUv_8).x;
  fowLum_7 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_12;
  tmpvar_12 = sqrt(dot (tmpvar_11, tmpvar_11));
  PointToEyeDist_6 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = clamp (((PointToEyeDist_6 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (((tmpvar_14 + 
    ((_FOWColor.xyz - tmpvar_14) * (tmpvar_13 * tmpvar_13))
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_7));
  color_4.xyz = tmpvar_15;
  c_1 = color_4;
  _glesFragData[0] = color_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD3);
  lightDir_2 = tmpvar_3;
  highp vec2 P_4;
  P_4 = ((xlv_TEXCOORD4.xy / xlv_TEXCOORD4.w) + 0.5);
  highp float tmpvar_5;
  tmpvar_5 = dot (xlv_TEXCOORD4.xyz, xlv_TEXCOORD4.xyz);
  lowp float atten_6;
  atten_6 = ((float(
    (xlv_TEXCOORD4.z > 0.0)
  ) * texture2D (_LightTexture0, P_4).w) * texture2D (_LightTextureB0, vec2(tmpvar_5)).w);
  lowp vec4 c_7;
  c_7.xyz = (((
    mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * atten_6) * 2.0));
  c_7.w = 1.0;
  c_1.xyz = c_7.xyz;
  c_1.w = 0.0;
  lowp vec4 color_8;
  color_8.w = c_1.w;
  mediump vec3 sceneColor_9;
  sceneColor_9 = c_1.xyz;
  mediump float PointToEyeDist_10;
  mediump float fowLum_11;
  mediump vec2 fowUv_12;
  highp vec2 tmpvar_13;
  tmpvar_13 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_12 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = texture2D (_FogOfWar, fowUv_12).x;
  fowLum_11 = tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_16;
  tmpvar_16 = sqrt(dot (tmpvar_15, tmpvar_15));
  PointToEyeDist_10 = tmpvar_16;
  mediump float tmpvar_17;
  tmpvar_17 = clamp (((PointToEyeDist_10 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_18;
  tmpvar_18 = (sceneColor_9 * sceneColor_9);
  mediump vec3 tmpvar_19;
  tmpvar_19 = mix (((tmpvar_18 + 
    ((_FOWColor.xyz - tmpvar_18) * (tmpvar_17 * tmpvar_17))
  ) * _FOWParams.z), sceneColor_9, vec3(fowLum_11));
  color_8.xyz = tmpvar_19;
  c_1 = color_8;
  gl_FragData[0] = color_8;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "SPOT" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD3);
  lightDir_2 = tmpvar_3;
  highp vec2 P_4;
  P_4 = ((xlv_TEXCOORD4.xy / xlv_TEXCOORD4.w) + 0.5);
  highp float tmpvar_5;
  tmpvar_5 = dot (xlv_TEXCOORD4.xyz, xlv_TEXCOORD4.xyz);
  lowp float atten_6;
  atten_6 = ((float(
    (xlv_TEXCOORD4.z > 0.0)
  ) * texture (_LightTexture0, P_4).w) * texture (_LightTextureB0, vec2(tmpvar_5)).w);
  lowp vec4 c_7;
  c_7.xyz = (((
    mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * atten_6) * 2.0));
  c_7.w = 1.0;
  c_1.xyz = c_7.xyz;
  c_1.w = 0.0;
  lowp vec4 color_8;
  color_8.w = c_1.w;
  mediump vec3 sceneColor_9;
  sceneColor_9 = c_1.xyz;
  mediump float PointToEyeDist_10;
  mediump float fowLum_11;
  mediump vec2 fowUv_12;
  highp vec2 tmpvar_13;
  tmpvar_13 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_12 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = texture (_FogOfWar, fowUv_12).x;
  fowLum_11 = tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_16;
  tmpvar_16 = sqrt(dot (tmpvar_15, tmpvar_15));
  PointToEyeDist_10 = tmpvar_16;
  mediump float tmpvar_17;
  tmpvar_17 = clamp (((PointToEyeDist_10 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_18;
  tmpvar_18 = (sceneColor_9 * sceneColor_9);
  mediump vec3 tmpvar_19;
  tmpvar_19 = mix (((tmpvar_18 + 
    ((_FOWColor.xyz - tmpvar_18) * (tmpvar_17 * tmpvar_17))
  ) * _FOWParams.z), sceneColor_9, vec3(fowLum_11));
  color_8.xyz = tmpvar_19;
  c_1 = color_8;
  _glesFragData[0] = color_8;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9).xyz;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _LightColor0;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD3);
  lightDir_2 = tmpvar_3;
  highp float tmpvar_4;
  tmpvar_4 = dot (xlv_TEXCOORD4, xlv_TEXCOORD4);
  lowp vec4 c_5;
  c_5.xyz = (((
    mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * 
    (texture2D (_LightTextureB0, vec2(tmpvar_4)).w * textureCube (_LightTexture0, xlv_TEXCOORD4).w)
  ) * 2.0));
  c_5.w = 1.0;
  c_1.xyz = c_5.xyz;
  c_1.w = 0.0;
  lowp vec4 color_6;
  color_6.w = c_1.w;
  mediump vec3 sceneColor_7;
  sceneColor_7 = c_1.xyz;
  mediump float PointToEyeDist_8;
  mediump float fowLum_9;
  mediump vec2 fowUv_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_10 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = texture2D (_FogOfWar, fowUv_10).x;
  fowLum_9 = tmpvar_12;
  highp vec3 tmpvar_13;
  tmpvar_13 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_14;
  tmpvar_14 = sqrt(dot (tmpvar_13, tmpvar_13));
  PointToEyeDist_8 = tmpvar_14;
  mediump float tmpvar_15;
  tmpvar_15 = clamp (((PointToEyeDist_8 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_16;
  tmpvar_16 = (sceneColor_7 * sceneColor_7);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (((tmpvar_16 + 
    ((_FOWColor.xyz - tmpvar_16) * (tmpvar_15 * tmpvar_15))
  ) * _FOWParams.z), sceneColor_7, vec3(fowLum_9));
  color_6.xyz = tmpvar_17;
  c_1 = color_6;
  gl_FragData[0] = color_6;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9).xyz;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _LightColor0;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD3);
  lightDir_2 = tmpvar_3;
  highp float tmpvar_4;
  tmpvar_4 = dot (xlv_TEXCOORD4, xlv_TEXCOORD4);
  lowp vec4 c_5;
  c_5.xyz = (((
    mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * 
    (texture (_LightTextureB0, vec2(tmpvar_4)).w * texture (_LightTexture0, xlv_TEXCOORD4).w)
  ) * 2.0));
  c_5.w = 1.0;
  c_1.xyz = c_5.xyz;
  c_1.w = 0.0;
  lowp vec4 color_6;
  color_6.w = c_1.w;
  mediump vec3 sceneColor_7;
  sceneColor_7 = c_1.xyz;
  mediump float PointToEyeDist_8;
  mediump float fowLum_9;
  mediump vec2 fowUv_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_10 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = texture (_FogOfWar, fowUv_10).x;
  fowLum_9 = tmpvar_12;
  highp vec3 tmpvar_13;
  tmpvar_13 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_14;
  tmpvar_14 = sqrt(dot (tmpvar_13, tmpvar_13));
  PointToEyeDist_8 = tmpvar_14;
  mediump float tmpvar_15;
  tmpvar_15 = clamp (((PointToEyeDist_8 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_16;
  tmpvar_16 = (sceneColor_7 * sceneColor_7);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (((tmpvar_16 + 
    ((_FOWColor.xyz - tmpvar_16) * (tmpvar_15 * tmpvar_15))
  ) * _FOWParams.z), sceneColor_7, vec3(fowLum_9));
  color_6.xyz = tmpvar_17;
  c_1 = color_6;
  _glesFragData[0] = color_6;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9).xy;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lightDir_2 = xlv_TEXCOORD3;
  lowp vec4 c_3;
  c_3.xyz = (((
    mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * texture2D (_LightTexture0, xlv_TEXCOORD4).w) * 2.0));
  c_3.w = 1.0;
  c_1.xyz = c_3.xyz;
  c_1.w = 0.0;
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float PointToEyeDist_6;
  mediump float fowLum_7;
  mediump vec2 fowUv_8;
  highp vec2 tmpvar_9;
  tmpvar_9 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_8 = tmpvar_9;
  lowp float tmpvar_10;
  tmpvar_10 = texture2D (_FogOfWar, fowUv_8).x;
  fowLum_7 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_12;
  tmpvar_12 = sqrt(dot (tmpvar_11, tmpvar_11));
  PointToEyeDist_6 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = clamp (((PointToEyeDist_6 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (((tmpvar_14 + 
    ((_FOWColor.xyz - tmpvar_14) * (tmpvar_13 * tmpvar_13))
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_7));
  color_4.xyz = tmpvar_15;
  c_1 = color_4;
  gl_FragData[0] = color_4;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out highp vec2 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9).xy;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in highp vec2 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lightDir_2 = xlv_TEXCOORD3;
  lowp vec4 c_3;
  c_3.xyz = (((
    mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * texture (_LightTexture0, xlv_TEXCOORD4).w) * 2.0));
  c_3.w = 1.0;
  c_1.xyz = c_3.xyz;
  c_1.w = 0.0;
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float PointToEyeDist_6;
  mediump float fowLum_7;
  mediump vec2 fowUv_8;
  highp vec2 tmpvar_9;
  tmpvar_9 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_8 = tmpvar_9;
  lowp float tmpvar_10;
  tmpvar_10 = texture (_FogOfWar, fowUv_8).x;
  fowLum_7 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_12;
  tmpvar_12 = sqrt(dot (tmpvar_11, tmpvar_11));
  PointToEyeDist_6 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = clamp (((PointToEyeDist_6 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (((tmpvar_14 + 
    ((_FOWColor.xyz - tmpvar_14) * (tmpvar_13 * tmpvar_13))
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_7));
  color_4.xyz = tmpvar_15;
  c_1 = color_4;
  _glesFragData[0] = color_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9).xyz;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD3);
  lightDir_2 = tmpvar_3;
  highp float tmpvar_4;
  tmpvar_4 = dot (xlv_TEXCOORD4, xlv_TEXCOORD4);
  lowp vec4 c_5;
  c_5.xyz = (((
    mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * texture2D (_LightTexture0, vec2(tmpvar_4)).w) * 2.0));
  c_5.w = 1.0;
  c_1.xyz = c_5.xyz;
  c_1.w = 0.0;
  lowp vec4 color_6;
  color_6.w = c_1.w;
  mediump vec3 sceneColor_7;
  sceneColor_7 = c_1.xyz;
  mediump float fowLum_8;
  mediump vec2 fowUv_9;
  highp vec2 tmpvar_10;
  tmpvar_10 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_9 = tmpvar_10;
  lowp float tmpvar_11;
  tmpvar_11 = texture2D (_FogOfWar, fowUv_9).x;
  fowLum_8 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_7 * sceneColor_7);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * 0.85)
  ) * _FOWParams.z), sceneColor_7, vec3(fowLum_8));
  color_6.xyz = tmpvar_13;
  c_1 = color_6;
  gl_FragData[0] = color_6;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9).xyz;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD3);
  lightDir_2 = tmpvar_3;
  highp float tmpvar_4;
  tmpvar_4 = dot (xlv_TEXCOORD4, xlv_TEXCOORD4);
  lowp vec4 c_5;
  c_5.xyz = (((
    mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * texture (_LightTexture0, vec2(tmpvar_4)).w) * 2.0));
  c_5.w = 1.0;
  c_1.xyz = c_5.xyz;
  c_1.w = 0.0;
  lowp vec4 color_6;
  color_6.w = c_1.w;
  mediump vec3 sceneColor_7;
  sceneColor_7 = c_1.xyz;
  mediump float fowLum_8;
  mediump vec2 fowUv_9;
  highp vec2 tmpvar_10;
  tmpvar_10 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_9 = tmpvar_10;
  lowp float tmpvar_11;
  tmpvar_11 = texture (_FogOfWar, fowUv_9).x;
  fowLum_8 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_7 * sceneColor_7);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * 0.85)
  ) * _FOWParams.z), sceneColor_7, vec3(fowLum_8));
  color_6.xyz = tmpvar_13;
  c_1 = color_6;
  _glesFragData[0] = color_6;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lightDir_2 = xlv_TEXCOORD3;
  lowp vec4 c_3;
  c_3.xyz = (((
    mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD2, lightDir_2)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.xyz = c_3.xyz;
  c_1.w = 0.0;
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float fowLum_6;
  mediump vec2 fowUv_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_7 = tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2D (_FogOfWar, fowUv_7).x;
  fowLum_6 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_11;
  tmpvar_11 = mix (((tmpvar_10 + 
    ((_FOWColor.xyz - tmpvar_10) * 0.85)
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_6));
  color_4.xyz = tmpvar_11;
  c_1 = color_4;
  gl_FragData[0] = color_4;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lightDir_2 = xlv_TEXCOORD3;
  lowp vec4 c_3;
  c_3.xyz = (((
    mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * (max (0.0, 
    dot (xlv_TEXCOORD2, lightDir_2)
  ) * 2.0));
  c_3.w = 1.0;
  c_1.xyz = c_3.xyz;
  c_1.w = 0.0;
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float fowLum_6;
  mediump vec2 fowUv_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_7 = tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture (_FogOfWar, fowUv_7).x;
  fowLum_6 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_11;
  tmpvar_11 = mix (((tmpvar_10 + 
    ((_FOWColor.xyz - tmpvar_10) * 0.85)
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_6));
  color_4.xyz = tmpvar_11;
  c_1 = color_4;
  _glesFragData[0] = color_4;
}



#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9);
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD3);
  lightDir_2 = tmpvar_3;
  highp vec2 P_4;
  P_4 = ((xlv_TEXCOORD4.xy / xlv_TEXCOORD4.w) + 0.5);
  highp float tmpvar_5;
  tmpvar_5 = dot (xlv_TEXCOORD4.xyz, xlv_TEXCOORD4.xyz);
  lowp float atten_6;
  atten_6 = ((float(
    (xlv_TEXCOORD4.z > 0.0)
  ) * texture2D (_LightTexture0, P_4).w) * texture2D (_LightTextureB0, vec2(tmpvar_5)).w);
  lowp vec4 c_7;
  c_7.xyz = (((
    mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * atten_6) * 2.0));
  c_7.w = 1.0;
  c_1.xyz = c_7.xyz;
  c_1.w = 0.0;
  lowp vec4 color_8;
  color_8.w = c_1.w;
  mediump vec3 sceneColor_9;
  sceneColor_9 = c_1.xyz;
  mediump float fowLum_10;
  mediump vec2 fowUv_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_11 = tmpvar_12;
  lowp float tmpvar_13;
  tmpvar_13 = texture2D (_FogOfWar, fowUv_11).x;
  fowLum_10 = tmpvar_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (sceneColor_9 * sceneColor_9);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (((tmpvar_14 + 
    ((_FOWColor.xyz - tmpvar_14) * 0.85)
  ) * _FOWParams.z), sceneColor_9, vec3(fowLum_10));
  color_8.xyz = tmpvar_15;
  c_1 = color_8;
  gl_FragData[0] = color_8;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "SPOT" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD3);
  lightDir_2 = tmpvar_3;
  highp vec2 P_4;
  P_4 = ((xlv_TEXCOORD4.xy / xlv_TEXCOORD4.w) + 0.5);
  highp float tmpvar_5;
  tmpvar_5 = dot (xlv_TEXCOORD4.xyz, xlv_TEXCOORD4.xyz);
  lowp float atten_6;
  atten_6 = ((float(
    (xlv_TEXCOORD4.z > 0.0)
  ) * texture (_LightTexture0, P_4).w) * texture (_LightTextureB0, vec2(tmpvar_5)).w);
  lowp vec4 c_7;
  c_7.xyz = (((
    mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * atten_6) * 2.0));
  c_7.w = 1.0;
  c_1.xyz = c_7.xyz;
  c_1.w = 0.0;
  lowp vec4 color_8;
  color_8.w = c_1.w;
  mediump vec3 sceneColor_9;
  sceneColor_9 = c_1.xyz;
  mediump float fowLum_10;
  mediump vec2 fowUv_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_11 = tmpvar_12;
  lowp float tmpvar_13;
  tmpvar_13 = texture (_FogOfWar, fowUv_11).x;
  fowLum_10 = tmpvar_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (sceneColor_9 * sceneColor_9);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (((tmpvar_14 + 
    ((_FOWColor.xyz - tmpvar_14) * 0.85)
  ) * _FOWParams.z), sceneColor_9, vec3(fowLum_10));
  color_8.xyz = tmpvar_15;
  c_1 = color_8;
  _glesFragData[0] = color_8;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9).xyz;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD3);
  lightDir_2 = tmpvar_3;
  highp float tmpvar_4;
  tmpvar_4 = dot (xlv_TEXCOORD4, xlv_TEXCOORD4);
  lowp vec4 c_5;
  c_5.xyz = (((
    mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * 
    (texture2D (_LightTextureB0, vec2(tmpvar_4)).w * textureCube (_LightTexture0, xlv_TEXCOORD4).w)
  ) * 2.0));
  c_5.w = 1.0;
  c_1.xyz = c_5.xyz;
  c_1.w = 0.0;
  lowp vec4 color_6;
  color_6.w = c_1.w;
  mediump vec3 sceneColor_7;
  sceneColor_7 = c_1.xyz;
  mediump float fowLum_8;
  mediump vec2 fowUv_9;
  highp vec2 tmpvar_10;
  tmpvar_10 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_9 = tmpvar_10;
  lowp float tmpvar_11;
  tmpvar_11 = texture2D (_FogOfWar, fowUv_9).x;
  fowLum_8 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_7 * sceneColor_7);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * 0.85)
  ) * _FOWParams.z), sceneColor_7, vec3(fowLum_8));
  color_6.xyz = tmpvar_13;
  c_1 = color_6;
  gl_FragData[0] = color_6;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = (_WorldSpaceLightPos0.xyz - cse_9.xyz);
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9).xyz;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD3);
  lightDir_2 = tmpvar_3;
  highp float tmpvar_4;
  tmpvar_4 = dot (xlv_TEXCOORD4, xlv_TEXCOORD4);
  lowp vec4 c_5;
  c_5.xyz = (((
    mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * 
    (texture (_LightTextureB0, vec2(tmpvar_4)).w * texture (_LightTexture0, xlv_TEXCOORD4).w)
  ) * 2.0));
  c_5.w = 1.0;
  c_1.xyz = c_5.xyz;
  c_1.w = 0.0;
  lowp vec4 color_6;
  color_6.w = c_1.w;
  mediump vec3 sceneColor_7;
  sceneColor_7 = c_1.xyz;
  mediump float fowLum_8;
  mediump vec2 fowUv_9;
  highp vec2 tmpvar_10;
  tmpvar_10 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_9 = tmpvar_10;
  lowp float tmpvar_11;
  tmpvar_11 = texture (_FogOfWar, fowUv_9).x;
  fowLum_8 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_7 * sceneColor_7);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * 0.85)
  ) * _FOWParams.z), sceneColor_7, vec3(fowLum_8));
  color_6.xyz = tmpvar_13;
  c_1 = color_6;
  _glesFragData[0] = color_6;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9).xy;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying lowp vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lightDir_2 = xlv_TEXCOORD3;
  lowp vec4 c_3;
  c_3.xyz = (((
    mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * texture2D (_LightTexture0, xlv_TEXCOORD4).w) * 2.0));
  c_3.w = 1.0;
  c_1.xyz = c_3.xyz;
  c_1.w = 0.0;
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float fowLum_6;
  mediump vec2 fowUv_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_7 = tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2D (_FogOfWar, fowUv_7).x;
  fowLum_6 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_11;
  tmpvar_11 = mix (((tmpvar_10 + 
    ((_FOWColor.xyz - tmpvar_10) * 0.85)
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_6));
  color_4.xyz = tmpvar_11;
  c_1 = color_4;
  gl_FragData[0] = color_4;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out lowp vec3 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out highp vec2 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp mat3 tmpvar_6;
  tmpvar_6[0] = _Object2World[0].xyz;
  tmpvar_6[1] = _Object2World[1].xyz;
  tmpvar_6[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_2 = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_8 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = tmpvar_2;
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = (_LightMatrix0 * cse_9).xy;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in lowp vec3 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in highp vec2 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lightDir_2 = xlv_TEXCOORD3;
  lowp vec4 c_3;
  c_3.xyz = (((
    mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www)
   * xlv_COLOR0.xyz) * _LightColor0.xyz) * ((
    max (0.0, dot (xlv_TEXCOORD2, lightDir_2))
   * texture (_LightTexture0, xlv_TEXCOORD4).w) * 2.0));
  c_3.w = 1.0;
  c_1.xyz = c_3.xyz;
  c_1.w = 0.0;
  lowp vec4 color_4;
  color_4.w = c_1.w;
  mediump vec3 sceneColor_5;
  sceneColor_5 = c_1.xyz;
  mediump float fowLum_6;
  mediump vec2 fowUv_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_7 = tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture (_FogOfWar, fowUv_7).x;
  fowLum_6 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (sceneColor_5 * sceneColor_5);
  mediump vec3 tmpvar_11;
  tmpvar_11 = mix (((tmpvar_10 + 
    ((_FOWColor.xyz - tmpvar_10) * 0.85)
  ) * _FOWParams.z), sceneColor_5, vec3(fowLum_6));
  color_4.xyz = tmpvar_11;
  c_1 = color_4;
  _glesFragData[0] = color_4;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "POINT" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "SPOT" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "SPOT" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "POINT" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "SPOT" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "SPOT" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "POINT" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "SPOT" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "SPOT" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
}
 }
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PrePassBase" "QUEUE"="Geometry+3" "RenderType"="Opaque" }
  Fog { Mode Off }
Program "vp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
varying lowp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec3 tmpvar_1;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = _Object2World[0].xyz;
  tmpvar_2[1] = _Object2World[1].xyz;
  tmpvar_2[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_1 = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
}



#endif
#ifdef FRAGMENT

varying lowp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 res_1;
  res_1.xyz = ((xlv_TEXCOORD0 * 0.5) + 0.5);
  res_1.w = 0.0;
  gl_FragData[0] = res_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
out lowp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec3 tmpvar_1;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = _Object2World[0].xyz;
  tmpvar_2[1] = _Object2World[1].xyz;
  tmpvar_2[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_1 = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
in lowp vec3 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 res_1;
  res_1.xyz = ((xlv_TEXCOORD0 * 0.5) + 0.5);
  res_1.w = 0.0;
  _glesFragData[0] = res_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
varying highp vec3 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
void main ()
{
  lowp vec3 tmpvar_1;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = _Object2World[0].xyz;
  tmpvar_2[1] = _Object2World[1].xyz;
  tmpvar_2[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_1 = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD1 = tmpvar_1;
}



#endif
#ifdef FRAGMENT

varying lowp vec3 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 res_1;
  res_1.xyz = ((xlv_TEXCOORD1 * 0.5) + 0.5);
  res_1.w = 0.0;
  gl_FragData[0] = res_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
out highp vec3 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
void main ()
{
  lowp vec3 tmpvar_1;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = _Object2World[0].xyz;
  tmpvar_2[1] = _Object2World[1].xyz;
  tmpvar_2[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_1 = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD1 = tmpvar_1;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
in lowp vec3 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 res_1;
  res_1.xyz = ((xlv_TEXCOORD1 * 0.5) + 0.5);
  res_1.w = 0.0;
  _glesFragData[0] = res_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
varying highp vec3 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
void main ()
{
  lowp vec3 tmpvar_1;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = _Object2World[0].xyz;
  tmpvar_2[1] = _Object2World[1].xyz;
  tmpvar_2[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_1 = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD1 = tmpvar_1;
}



#endif
#ifdef FRAGMENT

varying lowp vec3 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 res_1;
  res_1.xyz = ((xlv_TEXCOORD1 * 0.5) + 0.5);
  res_1.w = 0.0;
  gl_FragData[0] = res_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
out highp vec3 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
void main ()
{
  lowp vec3 tmpvar_1;
  highp mat3 tmpvar_2;
  tmpvar_2[0] = _Object2World[0].xyz;
  tmpvar_2[1] = _Object2World[1].xyz;
  tmpvar_2[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * (normalize(_glesNormal) * unity_Scale.w));
  tmpvar_1 = tmpvar_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = (_Object2World * _glesVertex).xyz;
  xlv_TEXCOORD1 = tmpvar_1;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
in lowp vec3 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 res_1;
  res_1.xyz = ((xlv_TEXCOORD1 * 0.5) + 0.5);
  res_1.w = 0.0;
  _glesFragData[0] = res_1;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
}
 }
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PrePassFinal" "QUEUE"="Geometry+3" "RenderType"="Opaque" }
  ZWrite Off
Program "vp" {
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_2 = tmpvar_11;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = o_6;
  xlv_TEXCOORD2 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_6.w;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6.xyz + xlv_TEXCOORD2);
  light_3.xyz = tmpvar_7;
  lowp vec4 c_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_4 * light_3.xyz);
  c_8.xyz = tmpvar_9;
  c_8.w = 1.0;
  c_2 = c_8;
  lowp vec4 color_10;
  color_10 = c_2;
  c_2 = color_10;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_2 = tmpvar_11;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = o_6;
  xlv_TEXCOORD2 = tmpvar_2;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = textureProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_6.w;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6.xyz + xlv_TEXCOORD2);
  light_3.xyz = tmpvar_7;
  lowp vec4 c_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_4 * light_3.xyz);
  c_8.xyz = tmpvar_9;
  c_8.w = 1.0;
  c_2 = c_8;
  lowp vec4 color_10;
  color_10 = c_2;
  c_2 = color_10;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  tmpvar_2.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = o_6;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_6 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = -(log2(max (light_6, vec4(0.001, 0.001, 0.001, 0.001))));
  light_6.w = tmpvar_9.w;
  highp float tmpvar_10;
  tmpvar_10 = ((sqrt(
    dot (xlv_TEXCOORD3, xlv_TEXCOORD3)
  ) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lmFull_4 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  lmIndirect_3 = tmpvar_12;
  light_6.xyz = (tmpvar_9.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_7 * light_6.xyz);
  c_13.xyz = tmpvar_14;
  c_13.w = 1.0;
  c_2 = c_13;
  lowp vec4 color_15;
  color_15 = c_2;
  c_2 = color_15;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  tmpvar_2.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = o_6;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = textureProj (_LightBuffer, xlv_TEXCOORD1);
  light_6 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = -(log2(max (light_6, vec4(0.001, 0.001, 0.001, 0.001))));
  light_6.w = tmpvar_9.w;
  highp float tmpvar_10;
  tmpvar_10 = ((sqrt(
    dot (xlv_TEXCOORD3, xlv_TEXCOORD3)
  ) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lmFull_4 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  lmIndirect_3 = tmpvar_12;
  light_6.xyz = (tmpvar_9.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_7 * light_6.xyz);
  c_13.xyz = tmpvar_14;
  c_13.w = 1.0;
  c_2 = c_13;
  lowp vec4 color_15;
  color_15 = c_2;
  c_2 = color_15;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_4;
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_2 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = o_5;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_5;
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_6 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = lm_6;
  mediump vec4 tmpvar_9;
  tmpvar_9 = (-(log2(
    max (light_3, vec4(0.001, 0.001, 0.001, 0.001))
  )) + tmpvar_8);
  light_3 = tmpvar_9;
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4 * tmpvar_9.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = 1.0;
  c_2 = c_10;
  lowp vec4 color_12;
  color_12 = c_2;
  c_2 = color_12;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_4;
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_2 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = o_5;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = textureProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_5;
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_6 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = lm_6;
  mediump vec4 tmpvar_9;
  tmpvar_9 = (-(log2(
    max (light_3, vec4(0.001, 0.001, 0.001, 0.001))
  )) + tmpvar_8);
  light_3 = tmpvar_9;
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4 * tmpvar_9.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = 1.0;
  c_2 = c_10;
  lowp vec4 color_12;
  color_12 = c_2;
  c_2 = color_12;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_2 = tmpvar_11;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = o_6;
  xlv_TEXCOORD2 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_6.w;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6.xyz + xlv_TEXCOORD2);
  light_3.xyz = tmpvar_7;
  lowp vec4 c_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_4 * light_3.xyz);
  c_8.xyz = tmpvar_9;
  c_8.w = 1.0;
  c_2 = c_8;
  lowp vec4 color_10;
  color_10 = c_2;
  c_2 = color_10;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_2 = tmpvar_11;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = o_6;
  xlv_TEXCOORD2 = tmpvar_2;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = textureProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_6.w;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6.xyz + xlv_TEXCOORD2);
  light_3.xyz = tmpvar_7;
  lowp vec4 c_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_4 * light_3.xyz);
  c_8.xyz = tmpvar_9;
  c_8.w = 1.0;
  c_2 = c_8;
  lowp vec4 color_10;
  color_10 = c_2;
  c_2 = color_10;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  tmpvar_2.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = o_6;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_6 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_6, vec4(0.001, 0.001, 0.001, 0.001));
  light_6.w = tmpvar_9.w;
  highp float tmpvar_10;
  tmpvar_10 = ((sqrt(
    dot (xlv_TEXCOORD3, xlv_TEXCOORD3)
  ) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lmFull_4 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  lmIndirect_3 = tmpvar_12;
  light_6.xyz = (tmpvar_9.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_7 * light_6.xyz);
  c_13.xyz = tmpvar_14;
  c_13.w = 1.0;
  c_2 = c_13;
  lowp vec4 color_15;
  color_15 = c_2;
  c_2 = color_15;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  tmpvar_2.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = o_6;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = textureProj (_LightBuffer, xlv_TEXCOORD1);
  light_6 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_6, vec4(0.001, 0.001, 0.001, 0.001));
  light_6.w = tmpvar_9.w;
  highp float tmpvar_10;
  tmpvar_10 = ((sqrt(
    dot (xlv_TEXCOORD3, xlv_TEXCOORD3)
  ) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lmFull_4 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  lmIndirect_3 = tmpvar_12;
  light_6.xyz = (tmpvar_9.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_7 * light_6.xyz);
  c_13.xyz = tmpvar_14;
  c_13.w = 1.0;
  c_2 = c_13;
  lowp vec4 color_15;
  color_15 = c_2;
  c_2 = color_15;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_4;
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_2 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = o_5;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_5;
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_6 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = lm_6;
  mediump vec4 tmpvar_9;
  tmpvar_9 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_8);
  light_3 = tmpvar_9;
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4 * tmpvar_9.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = 1.0;
  c_2 = c_10;
  lowp vec4 color_12;
  color_12 = c_2;
  c_2 = color_12;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_4;
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_2 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD1 = o_5;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = textureProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_5;
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_6 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = lm_6;
  mediump vec4 tmpvar_9;
  tmpvar_9 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_8);
  light_3 = tmpvar_9;
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4 * tmpvar_9.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = 1.0;
  c_2 = c_10;
  lowp vec4 color_12;
  color_12 = c_2;
  c_2 = color_12;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_2 = tmpvar_11;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_6.w;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6.xyz + xlv_TEXCOORD3);
  light_3.xyz = tmpvar_7;
  lowp vec4 c_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_4 * light_3.xyz);
  c_8.xyz = tmpvar_9;
  c_8.w = 1.0;
  c_2 = c_8;
  lowp vec4 color_10;
  color_10 = c_2;
  mediump vec3 sceneColor_11;
  sceneColor_11 = color_10.xyz;
  mediump float PointToEyeDist_12;
  mediump float fowLum_13;
  mediump vec2 fowUv_14;
  highp vec2 tmpvar_15;
  tmpvar_15 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_14 = tmpvar_15;
  lowp float tmpvar_16;
  tmpvar_16 = texture2D (_FogOfWar, fowUv_14).x;
  fowLum_13 = tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_18;
  tmpvar_18 = sqrt(dot (tmpvar_17, tmpvar_17));
  PointToEyeDist_12 = tmpvar_18;
  mediump float tmpvar_19;
  tmpvar_19 = clamp (((PointToEyeDist_12 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_20;
  tmpvar_20 = (sceneColor_11 * sceneColor_11);
  mediump vec3 tmpvar_21;
  tmpvar_21 = mix (((tmpvar_20 + 
    ((_FOWColor.xyz - tmpvar_20) * (tmpvar_19 * tmpvar_19))
  ) * _FOWParams.z), sceneColor_11, vec3(fowLum_13));
  color_10.xyz = tmpvar_21;
  c_2 = color_10;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_2 = tmpvar_11;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_6.w;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6.xyz + xlv_TEXCOORD3);
  light_3.xyz = tmpvar_7;
  lowp vec4 c_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_4 * light_3.xyz);
  c_8.xyz = tmpvar_9;
  c_8.w = 1.0;
  c_2 = c_8;
  lowp vec4 color_10;
  color_10 = c_2;
  mediump vec3 sceneColor_11;
  sceneColor_11 = color_10.xyz;
  mediump float PointToEyeDist_12;
  mediump float fowLum_13;
  mediump vec2 fowUv_14;
  highp vec2 tmpvar_15;
  tmpvar_15 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_14 = tmpvar_15;
  lowp float tmpvar_16;
  tmpvar_16 = texture (_FogOfWar, fowUv_14).x;
  fowLum_13 = tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_18;
  tmpvar_18 = sqrt(dot (tmpvar_17, tmpvar_17));
  PointToEyeDist_12 = tmpvar_18;
  mediump float tmpvar_19;
  tmpvar_19 = clamp (((PointToEyeDist_12 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_20;
  tmpvar_20 = (sceneColor_11 * sceneColor_11);
  mediump vec3 tmpvar_21;
  tmpvar_21 = mix (((tmpvar_20 + 
    ((_FOWColor.xyz - tmpvar_20) * (tmpvar_19 * tmpvar_19))
  ) * _FOWParams.z), sceneColor_11, vec3(fowLum_13));
  color_10.xyz = tmpvar_21;
  c_2 = color_10;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_2.xyz = ((cse_9.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD4 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_6 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = -(log2(max (light_6, vec4(0.001, 0.001, 0.001, 0.001))));
  light_6.w = tmpvar_9.w;
  highp float tmpvar_10;
  tmpvar_10 = ((sqrt(
    dot (xlv_TEXCOORD4, xlv_TEXCOORD4)
  ) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lmFull_4 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  lmIndirect_3 = tmpvar_12;
  light_6.xyz = (tmpvar_9.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_7 * light_6.xyz);
  c_13.xyz = tmpvar_14;
  c_13.w = 1.0;
  c_2 = c_13;
  lowp vec4 color_15;
  color_15 = c_2;
  mediump vec3 sceneColor_16;
  sceneColor_16 = color_15.xyz;
  mediump float PointToEyeDist_17;
  mediump float fowLum_18;
  mediump vec2 fowUv_19;
  highp vec2 tmpvar_20;
  tmpvar_20 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_19 = tmpvar_20;
  lowp float tmpvar_21;
  tmpvar_21 = texture2D (_FogOfWar, fowUv_19).x;
  fowLum_18 = tmpvar_21;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_23;
  tmpvar_23 = sqrt(dot (tmpvar_22, tmpvar_22));
  PointToEyeDist_17 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = clamp (((PointToEyeDist_17 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_25;
  tmpvar_25 = (sceneColor_16 * sceneColor_16);
  mediump vec3 tmpvar_26;
  tmpvar_26 = mix (((tmpvar_25 + 
    ((_FOWColor.xyz - tmpvar_25) * (tmpvar_24 * tmpvar_24))
  ) * _FOWParams.z), sceneColor_16, vec3(fowLum_18));
  color_15.xyz = tmpvar_26;
  c_2 = color_15;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_2.xyz = ((cse_9.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD4 = tmpvar_2;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_6 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = -(log2(max (light_6, vec4(0.001, 0.001, 0.001, 0.001))));
  light_6.w = tmpvar_9.w;
  highp float tmpvar_10;
  tmpvar_10 = ((sqrt(
    dot (xlv_TEXCOORD4, xlv_TEXCOORD4)
  ) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lmFull_4 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  lmIndirect_3 = tmpvar_12;
  light_6.xyz = (tmpvar_9.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_7 * light_6.xyz);
  c_13.xyz = tmpvar_14;
  c_13.w = 1.0;
  c_2 = c_13;
  lowp vec4 color_15;
  color_15 = c_2;
  mediump vec3 sceneColor_16;
  sceneColor_16 = color_15.xyz;
  mediump float PointToEyeDist_17;
  mediump float fowLum_18;
  mediump vec2 fowUv_19;
  highp vec2 tmpvar_20;
  tmpvar_20 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_19 = tmpvar_20;
  lowp float tmpvar_21;
  tmpvar_21 = texture (_FogOfWar, fowUv_19).x;
  fowLum_18 = tmpvar_21;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_23;
  tmpvar_23 = sqrt(dot (tmpvar_22, tmpvar_22));
  PointToEyeDist_17 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = clamp (((PointToEyeDist_17 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_25;
  tmpvar_25 = (sceneColor_16 * sceneColor_16);
  mediump vec3 tmpvar_26;
  tmpvar_26 = mix (((tmpvar_25 + 
    ((_FOWColor.xyz - tmpvar_25) * (tmpvar_24 * tmpvar_24))
  ) * _FOWParams.z), sceneColor_16, vec3(fowLum_18));
  color_15.xyz = tmpvar_26;
  c_2 = color_15;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_4;
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_2 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_5;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lm_6 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = lm_6;
  mediump vec4 tmpvar_9;
  tmpvar_9 = (-(log2(
    max (light_3, vec4(0.001, 0.001, 0.001, 0.001))
  )) + tmpvar_8);
  light_3 = tmpvar_9;
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4 * tmpvar_9.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = 1.0;
  c_2 = c_10;
  lowp vec4 color_12;
  color_12 = c_2;
  mediump vec3 sceneColor_13;
  sceneColor_13 = color_12.xyz;
  mediump float PointToEyeDist_14;
  mediump float fowLum_15;
  mediump vec2 fowUv_16;
  highp vec2 tmpvar_17;
  tmpvar_17 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = texture2D (_FogOfWar, fowUv_16).x;
  fowLum_15 = tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_20;
  tmpvar_20 = sqrt(dot (tmpvar_19, tmpvar_19));
  PointToEyeDist_14 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = clamp (((PointToEyeDist_14 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_22;
  tmpvar_22 = (sceneColor_13 * sceneColor_13);
  mediump vec3 tmpvar_23;
  tmpvar_23 = mix (((tmpvar_22 + 
    ((_FOWColor.xyz - tmpvar_22) * (tmpvar_21 * tmpvar_21))
  ) * _FOWParams.z), sceneColor_13, vec3(fowLum_15));
  color_12.xyz = tmpvar_23;
  c_2 = color_12;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_4;
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_2 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_5;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lm_6 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = lm_6;
  mediump vec4 tmpvar_9;
  tmpvar_9 = (-(log2(
    max (light_3, vec4(0.001, 0.001, 0.001, 0.001))
  )) + tmpvar_8);
  light_3 = tmpvar_9;
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4 * tmpvar_9.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = 1.0;
  c_2 = c_10;
  lowp vec4 color_12;
  color_12 = c_2;
  mediump vec3 sceneColor_13;
  sceneColor_13 = color_12.xyz;
  mediump float PointToEyeDist_14;
  mediump float fowLum_15;
  mediump vec2 fowUv_16;
  highp vec2 tmpvar_17;
  tmpvar_17 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = texture (_FogOfWar, fowUv_16).x;
  fowLum_15 = tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_20;
  tmpvar_20 = sqrt(dot (tmpvar_19, tmpvar_19));
  PointToEyeDist_14 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = clamp (((PointToEyeDist_14 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_22;
  tmpvar_22 = (sceneColor_13 * sceneColor_13);
  mediump vec3 tmpvar_23;
  tmpvar_23 = mix (((tmpvar_22 + 
    ((_FOWColor.xyz - tmpvar_22) * (tmpvar_21 * tmpvar_21))
  ) * _FOWParams.z), sceneColor_13, vec3(fowLum_15));
  color_12.xyz = tmpvar_23;
  c_2 = color_12;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_2 = tmpvar_11;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_6.w;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6.xyz + xlv_TEXCOORD3);
  light_3.xyz = tmpvar_7;
  lowp vec4 c_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_4 * light_3.xyz);
  c_8.xyz = tmpvar_9;
  c_8.w = 1.0;
  c_2 = c_8;
  lowp vec4 color_10;
  color_10 = c_2;
  mediump vec3 sceneColor_11;
  sceneColor_11 = color_10.xyz;
  mediump float PointToEyeDist_12;
  mediump float fowLum_13;
  mediump vec2 fowUv_14;
  highp vec2 tmpvar_15;
  tmpvar_15 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_14 = tmpvar_15;
  lowp float tmpvar_16;
  tmpvar_16 = texture2D (_FogOfWar, fowUv_14).x;
  fowLum_13 = tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_18;
  tmpvar_18 = sqrt(dot (tmpvar_17, tmpvar_17));
  PointToEyeDist_12 = tmpvar_18;
  mediump float tmpvar_19;
  tmpvar_19 = clamp (((PointToEyeDist_12 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_20;
  tmpvar_20 = (sceneColor_11 * sceneColor_11);
  mediump vec3 tmpvar_21;
  tmpvar_21 = mix (((tmpvar_20 + 
    ((_FOWColor.xyz - tmpvar_20) * (tmpvar_19 * tmpvar_19))
  ) * _FOWParams.z), sceneColor_11, vec3(fowLum_13));
  color_10.xyz = tmpvar_21;
  c_2 = color_10;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_2 = tmpvar_11;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_6.w;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6.xyz + xlv_TEXCOORD3);
  light_3.xyz = tmpvar_7;
  lowp vec4 c_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_4 * light_3.xyz);
  c_8.xyz = tmpvar_9;
  c_8.w = 1.0;
  c_2 = c_8;
  lowp vec4 color_10;
  color_10 = c_2;
  mediump vec3 sceneColor_11;
  sceneColor_11 = color_10.xyz;
  mediump float PointToEyeDist_12;
  mediump float fowLum_13;
  mediump vec2 fowUv_14;
  highp vec2 tmpvar_15;
  tmpvar_15 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_14 = tmpvar_15;
  lowp float tmpvar_16;
  tmpvar_16 = texture (_FogOfWar, fowUv_14).x;
  fowLum_13 = tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_17 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_18;
  tmpvar_18 = sqrt(dot (tmpvar_17, tmpvar_17));
  PointToEyeDist_12 = tmpvar_18;
  mediump float tmpvar_19;
  tmpvar_19 = clamp (((PointToEyeDist_12 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_20;
  tmpvar_20 = (sceneColor_11 * sceneColor_11);
  mediump vec3 tmpvar_21;
  tmpvar_21 = mix (((tmpvar_20 + 
    ((_FOWColor.xyz - tmpvar_20) * (tmpvar_19 * tmpvar_19))
  ) * _FOWParams.z), sceneColor_11, vec3(fowLum_13));
  color_10.xyz = tmpvar_21;
  c_2 = color_10;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_2.xyz = ((cse_9.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD4 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_6 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_6, vec4(0.001, 0.001, 0.001, 0.001));
  light_6.w = tmpvar_9.w;
  highp float tmpvar_10;
  tmpvar_10 = ((sqrt(
    dot (xlv_TEXCOORD4, xlv_TEXCOORD4)
  ) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lmFull_4 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  lmIndirect_3 = tmpvar_12;
  light_6.xyz = (tmpvar_9.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_7 * light_6.xyz);
  c_13.xyz = tmpvar_14;
  c_13.w = 1.0;
  c_2 = c_13;
  lowp vec4 color_15;
  color_15 = c_2;
  mediump vec3 sceneColor_16;
  sceneColor_16 = color_15.xyz;
  mediump float PointToEyeDist_17;
  mediump float fowLum_18;
  mediump vec2 fowUv_19;
  highp vec2 tmpvar_20;
  tmpvar_20 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_19 = tmpvar_20;
  lowp float tmpvar_21;
  tmpvar_21 = texture2D (_FogOfWar, fowUv_19).x;
  fowLum_18 = tmpvar_21;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_23;
  tmpvar_23 = sqrt(dot (tmpvar_22, tmpvar_22));
  PointToEyeDist_17 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = clamp (((PointToEyeDist_17 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_25;
  tmpvar_25 = (sceneColor_16 * sceneColor_16);
  mediump vec3 tmpvar_26;
  tmpvar_26 = mix (((tmpvar_25 + 
    ((_FOWColor.xyz - tmpvar_25) * (tmpvar_24 * tmpvar_24))
  ) * _FOWParams.z), sceneColor_16, vec3(fowLum_18));
  color_15.xyz = tmpvar_26;
  c_2 = color_15;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_2.xyz = ((cse_9.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD4 = tmpvar_2;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_6 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_6, vec4(0.001, 0.001, 0.001, 0.001));
  light_6.w = tmpvar_9.w;
  highp float tmpvar_10;
  tmpvar_10 = ((sqrt(
    dot (xlv_TEXCOORD4, xlv_TEXCOORD4)
  ) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lmFull_4 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  lmIndirect_3 = tmpvar_12;
  light_6.xyz = (tmpvar_9.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_7 * light_6.xyz);
  c_13.xyz = tmpvar_14;
  c_13.w = 1.0;
  c_2 = c_13;
  lowp vec4 color_15;
  color_15 = c_2;
  mediump vec3 sceneColor_16;
  sceneColor_16 = color_15.xyz;
  mediump float PointToEyeDist_17;
  mediump float fowLum_18;
  mediump vec2 fowUv_19;
  highp vec2 tmpvar_20;
  tmpvar_20 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_19 = tmpvar_20;
  lowp float tmpvar_21;
  tmpvar_21 = texture (_FogOfWar, fowUv_19).x;
  fowLum_18 = tmpvar_21;
  highp vec3 tmpvar_22;
  tmpvar_22 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_23;
  tmpvar_23 = sqrt(dot (tmpvar_22, tmpvar_22));
  PointToEyeDist_17 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = clamp (((PointToEyeDist_17 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_25;
  tmpvar_25 = (sceneColor_16 * sceneColor_16);
  mediump vec3 tmpvar_26;
  tmpvar_26 = mix (((tmpvar_25 + 
    ((_FOWColor.xyz - tmpvar_25) * (tmpvar_24 * tmpvar_24))
  ) * _FOWParams.z), sceneColor_16, vec3(fowLum_18));
  color_15.xyz = tmpvar_26;
  c_2 = color_15;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_4;
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_2 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_5;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lm_6 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = lm_6;
  mediump vec4 tmpvar_9;
  tmpvar_9 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_8);
  light_3 = tmpvar_9;
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4 * tmpvar_9.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = 1.0;
  c_2 = c_10;
  lowp vec4 color_12;
  color_12 = c_2;
  mediump vec3 sceneColor_13;
  sceneColor_13 = color_12.xyz;
  mediump float PointToEyeDist_14;
  mediump float fowLum_15;
  mediump vec2 fowUv_16;
  highp vec2 tmpvar_17;
  tmpvar_17 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = texture2D (_FogOfWar, fowUv_16).x;
  fowLum_15 = tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_20;
  tmpvar_20 = sqrt(dot (tmpvar_19, tmpvar_19));
  PointToEyeDist_14 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = clamp (((PointToEyeDist_14 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_22;
  tmpvar_22 = (sceneColor_13 * sceneColor_13);
  mediump vec3 tmpvar_23;
  tmpvar_23 = mix (((tmpvar_22 + 
    ((_FOWColor.xyz - tmpvar_22) * (tmpvar_21 * tmpvar_21))
  ) * _FOWParams.z), sceneColor_13, vec3(fowLum_15));
  color_12.xyz = tmpvar_23;
  c_2 = color_12;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_4;
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_2 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_5;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lm_6 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = lm_6;
  mediump vec4 tmpvar_9;
  tmpvar_9 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_8);
  light_3 = tmpvar_9;
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4 * tmpvar_9.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = 1.0;
  c_2 = c_10;
  lowp vec4 color_12;
  color_12 = c_2;
  mediump vec3 sceneColor_13;
  sceneColor_13 = color_12.xyz;
  mediump float PointToEyeDist_14;
  mediump float fowLum_15;
  mediump vec2 fowUv_16;
  highp vec2 tmpvar_17;
  tmpvar_17 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_16 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = texture (_FogOfWar, fowUv_16).x;
  fowLum_15 = tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_20;
  tmpvar_20 = sqrt(dot (tmpvar_19, tmpvar_19));
  PointToEyeDist_14 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = clamp (((PointToEyeDist_14 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_22;
  tmpvar_22 = (sceneColor_13 * sceneColor_13);
  mediump vec3 tmpvar_23;
  tmpvar_23 = mix (((tmpvar_22 + 
    ((_FOWColor.xyz - tmpvar_22) * (tmpvar_21 * tmpvar_21))
  ) * _FOWParams.z), sceneColor_13, vec3(fowLum_15));
  color_12.xyz = tmpvar_23;
  c_2 = color_12;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_2 = tmpvar_11;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_6.w;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6.xyz + xlv_TEXCOORD3);
  light_3.xyz = tmpvar_7;
  lowp vec4 c_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_4 * light_3.xyz);
  c_8.xyz = tmpvar_9;
  c_8.w = 1.0;
  c_2 = c_8;
  lowp vec4 color_10;
  color_10 = c_2;
  mediump vec3 sceneColor_11;
  sceneColor_11 = color_10.xyz;
  mediump float fowLum_12;
  mediump vec2 fowUv_13;
  highp vec2 tmpvar_14;
  tmpvar_14 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_13 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = texture2D (_FogOfWar, fowUv_13).x;
  fowLum_12 = tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_16 = (sceneColor_11 * sceneColor_11);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (((tmpvar_16 + 
    ((_FOWColor.xyz - tmpvar_16) * 0.85)
  ) * _FOWParams.z), sceneColor_11, vec3(fowLum_12));
  color_10.xyz = tmpvar_17;
  c_2 = color_10;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_2 = tmpvar_11;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_6.w;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6.xyz + xlv_TEXCOORD3);
  light_3.xyz = tmpvar_7;
  lowp vec4 c_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_4 * light_3.xyz);
  c_8.xyz = tmpvar_9;
  c_8.w = 1.0;
  c_2 = c_8;
  lowp vec4 color_10;
  color_10 = c_2;
  mediump vec3 sceneColor_11;
  sceneColor_11 = color_10.xyz;
  mediump float fowLum_12;
  mediump vec2 fowUv_13;
  highp vec2 tmpvar_14;
  tmpvar_14 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_13 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = texture (_FogOfWar, fowUv_13).x;
  fowLum_12 = tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_16 = (sceneColor_11 * sceneColor_11);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (((tmpvar_16 + 
    ((_FOWColor.xyz - tmpvar_16) * 0.85)
  ) * _FOWParams.z), sceneColor_11, vec3(fowLum_12));
  color_10.xyz = tmpvar_17;
  c_2 = color_10;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_2.xyz = ((cse_9.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD4 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_6 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = -(log2(max (light_6, vec4(0.001, 0.001, 0.001, 0.001))));
  light_6.w = tmpvar_9.w;
  highp float tmpvar_10;
  tmpvar_10 = ((sqrt(
    dot (xlv_TEXCOORD4, xlv_TEXCOORD4)
  ) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lmFull_4 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  lmIndirect_3 = tmpvar_12;
  light_6.xyz = (tmpvar_9.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_7 * light_6.xyz);
  c_13.xyz = tmpvar_14;
  c_13.w = 1.0;
  c_2 = c_13;
  lowp vec4 color_15;
  color_15 = c_2;
  mediump vec3 sceneColor_16;
  sceneColor_16 = color_15.xyz;
  mediump float fowLum_17;
  mediump vec2 fowUv_18;
  highp vec2 tmpvar_19;
  tmpvar_19 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_18 = tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = texture2D (_FogOfWar, fowUv_18).x;
  fowLum_17 = tmpvar_20;
  mediump vec3 tmpvar_21;
  tmpvar_21 = (sceneColor_16 * sceneColor_16);
  mediump vec3 tmpvar_22;
  tmpvar_22 = mix (((tmpvar_21 + 
    ((_FOWColor.xyz - tmpvar_21) * 0.85)
  ) * _FOWParams.z), sceneColor_16, vec3(fowLum_17));
  color_15.xyz = tmpvar_22;
  c_2 = color_15;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_2.xyz = ((cse_9.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD4 = tmpvar_2;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_6 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = -(log2(max (light_6, vec4(0.001, 0.001, 0.001, 0.001))));
  light_6.w = tmpvar_9.w;
  highp float tmpvar_10;
  tmpvar_10 = ((sqrt(
    dot (xlv_TEXCOORD4, xlv_TEXCOORD4)
  ) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lmFull_4 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  lmIndirect_3 = tmpvar_12;
  light_6.xyz = (tmpvar_9.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_7 * light_6.xyz);
  c_13.xyz = tmpvar_14;
  c_13.w = 1.0;
  c_2 = c_13;
  lowp vec4 color_15;
  color_15 = c_2;
  mediump vec3 sceneColor_16;
  sceneColor_16 = color_15.xyz;
  mediump float fowLum_17;
  mediump vec2 fowUv_18;
  highp vec2 tmpvar_19;
  tmpvar_19 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_18 = tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = texture (_FogOfWar, fowUv_18).x;
  fowLum_17 = tmpvar_20;
  mediump vec3 tmpvar_21;
  tmpvar_21 = (sceneColor_16 * sceneColor_16);
  mediump vec3 tmpvar_22;
  tmpvar_22 = mix (((tmpvar_21 + 
    ((_FOWColor.xyz - tmpvar_21) * 0.85)
  ) * _FOWParams.z), sceneColor_16, vec3(fowLum_17));
  color_15.xyz = tmpvar_22;
  c_2 = color_15;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_4;
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_2 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_5;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lm_6 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = lm_6;
  mediump vec4 tmpvar_9;
  tmpvar_9 = (-(log2(
    max (light_3, vec4(0.001, 0.001, 0.001, 0.001))
  )) + tmpvar_8);
  light_3 = tmpvar_9;
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4 * tmpvar_9.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = 1.0;
  c_2 = c_10;
  lowp vec4 color_12;
  color_12 = c_2;
  mediump vec3 sceneColor_13;
  sceneColor_13 = color_12.xyz;
  mediump float fowLum_14;
  mediump vec2 fowUv_15;
  highp vec2 tmpvar_16;
  tmpvar_16 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_15 = tmpvar_16;
  lowp float tmpvar_17;
  tmpvar_17 = texture2D (_FogOfWar, fowUv_15).x;
  fowLum_14 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = (sceneColor_13 * sceneColor_13);
  mediump vec3 tmpvar_19;
  tmpvar_19 = mix (((tmpvar_18 + 
    ((_FOWColor.xyz - tmpvar_18) * 0.85)
  ) * _FOWParams.z), sceneColor_13, vec3(fowLum_14));
  color_12.xyz = tmpvar_19;
  c_2 = color_12;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_4;
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_2 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_5;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lm_6 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = lm_6;
  mediump vec4 tmpvar_9;
  tmpvar_9 = (-(log2(
    max (light_3, vec4(0.001, 0.001, 0.001, 0.001))
  )) + tmpvar_8);
  light_3 = tmpvar_9;
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4 * tmpvar_9.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = 1.0;
  c_2 = c_10;
  lowp vec4 color_12;
  color_12 = c_2;
  mediump vec3 sceneColor_13;
  sceneColor_13 = color_12.xyz;
  mediump float fowLum_14;
  mediump vec2 fowUv_15;
  highp vec2 tmpvar_16;
  tmpvar_16 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_15 = tmpvar_16;
  lowp float tmpvar_17;
  tmpvar_17 = texture (_FogOfWar, fowUv_15).x;
  fowLum_14 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = (sceneColor_13 * sceneColor_13);
  mediump vec3 tmpvar_19;
  tmpvar_19 = mix (((tmpvar_18 + 
    ((_FOWColor.xyz - tmpvar_18) * 0.85)
  ) * _FOWParams.z), sceneColor_13, vec3(fowLum_14));
  color_12.xyz = tmpvar_19;
  c_2 = color_12;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_2 = tmpvar_11;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_6.w;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6.xyz + xlv_TEXCOORD3);
  light_3.xyz = tmpvar_7;
  lowp vec4 c_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_4 * light_3.xyz);
  c_8.xyz = tmpvar_9;
  c_8.w = 1.0;
  c_2 = c_8;
  lowp vec4 color_10;
  color_10 = c_2;
  mediump vec3 sceneColor_11;
  sceneColor_11 = color_10.xyz;
  mediump float fowLum_12;
  mediump vec2 fowUv_13;
  highp vec2 tmpvar_14;
  tmpvar_14 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_13 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = texture2D (_FogOfWar, fowUv_13).x;
  fowLum_12 = tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_16 = (sceneColor_11 * sceneColor_11);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (((tmpvar_16 + 
    ((_FOWColor.xyz - tmpvar_16) * 0.85)
  ) * _FOWParams.z), sceneColor_11, vec3(fowLum_12));
  color_10.xyz = tmpvar_17;
  c_2 = color_10;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_2 = tmpvar_11;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_6.w;
  highp vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_6.xyz + xlv_TEXCOORD3);
  light_3.xyz = tmpvar_7;
  lowp vec4 c_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_4 * light_3.xyz);
  c_8.xyz = tmpvar_9;
  c_8.w = 1.0;
  c_2 = c_8;
  lowp vec4 color_10;
  color_10 = c_2;
  mediump vec3 sceneColor_11;
  sceneColor_11 = color_10.xyz;
  mediump float fowLum_12;
  mediump vec2 fowUv_13;
  highp vec2 tmpvar_14;
  tmpvar_14 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_13 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = texture (_FogOfWar, fowUv_13).x;
  fowLum_12 = tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_16 = (sceneColor_11 * sceneColor_11);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (((tmpvar_16 + 
    ((_FOWColor.xyz - tmpvar_16) * 0.85)
  ) * _FOWParams.z), sceneColor_11, vec3(fowLum_12));
  color_10.xyz = tmpvar_17;
  c_2 = color_10;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_2.xyz = ((cse_9.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD4 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_6 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_6, vec4(0.001, 0.001, 0.001, 0.001));
  light_6.w = tmpvar_9.w;
  highp float tmpvar_10;
  tmpvar_10 = ((sqrt(
    dot (xlv_TEXCOORD4, xlv_TEXCOORD4)
  ) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lmFull_4 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  lmIndirect_3 = tmpvar_12;
  light_6.xyz = (tmpvar_9.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_7 * light_6.xyz);
  c_13.xyz = tmpvar_14;
  c_13.w = 1.0;
  c_2 = c_13;
  lowp vec4 color_15;
  color_15 = c_2;
  mediump vec3 sceneColor_16;
  sceneColor_16 = color_15.xyz;
  mediump float fowLum_17;
  mediump vec2 fowUv_18;
  highp vec2 tmpvar_19;
  tmpvar_19 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_18 = tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = texture2D (_FogOfWar, fowUv_18).x;
  fowLum_17 = tmpvar_20;
  mediump vec3 tmpvar_21;
  tmpvar_21 = (sceneColor_16 * sceneColor_16);
  mediump vec3 tmpvar_22;
  tmpvar_22 = mix (((tmpvar_21 + 
    ((_FOWColor.xyz - tmpvar_21) * 0.85)
  ) * _FOWParams.z), sceneColor_16, vec3(fowLum_17));
  color_15.xyz = tmpvar_22;
  c_2 = color_15;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_5;
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_3.zw;
  highp vec4 cse_9;
  cse_9 = (_Object2World * _glesVertex);
  tmpvar_2.xyz = ((cse_9.xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = cse_9.xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD4 = tmpvar_2;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_6 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_6, vec4(0.001, 0.001, 0.001, 0.001));
  light_6.w = tmpvar_9.w;
  highp float tmpvar_10;
  tmpvar_10 = ((sqrt(
    dot (xlv_TEXCOORD4, xlv_TEXCOORD4)
  ) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lmFull_4 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  lmIndirect_3 = tmpvar_12;
  light_6.xyz = (tmpvar_9.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_7 * light_6.xyz);
  c_13.xyz = tmpvar_14;
  c_13.w = 1.0;
  c_2 = c_13;
  lowp vec4 color_15;
  color_15 = c_2;
  mediump vec3 sceneColor_16;
  sceneColor_16 = color_15.xyz;
  mediump float fowLum_17;
  mediump vec2 fowUv_18;
  highp vec2 tmpvar_19;
  tmpvar_19 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_18 = tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = texture (_FogOfWar, fowUv_18).x;
  fowLum_17 = tmpvar_20;
  mediump vec3 tmpvar_21;
  tmpvar_21 = (sceneColor_16 * sceneColor_16);
  mediump vec3 tmpvar_22;
  tmpvar_22 = mix (((tmpvar_21 + 
    ((_FOWColor.xyz - tmpvar_21) * 0.85)
  ) * _FOWParams.z), sceneColor_16, vec3(fowLum_17));
  color_15.xyz = tmpvar_22;
  c_2 = color_15;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_4;
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_2 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_5;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
varying mediump vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec4 xlv_COLOR0;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture2D (_Splat0, xlv_TEXCOORD0.xy).xyz, texture2D (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lm_6 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = lm_6;
  mediump vec4 tmpvar_9;
  tmpvar_9 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_8);
  light_3 = tmpvar_9;
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4 * tmpvar_9.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = 1.0;
  c_2 = c_10;
  lowp vec4 color_12;
  color_12 = c_2;
  mediump vec3 sceneColor_13;
  sceneColor_13 = color_12.xyz;
  mediump float fowLum_14;
  mediump vec2 fowUv_15;
  highp vec2 tmpvar_16;
  tmpvar_16 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_15 = tmpvar_16;
  lowp float tmpvar_17;
  tmpvar_17 = texture2D (_FogOfWar, fowUv_15).x;
  fowLum_14 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = (sceneColor_13 * sceneColor_13);
  mediump vec3 tmpvar_19;
  tmpvar_19 = mix (((tmpvar_18 + 
    ((_FOWColor.xyz - tmpvar_18) * 0.85)
  ) * _FOWParams.z), sceneColor_13, vec3(fowLum_14));
  color_12.xyz = tmpvar_19;
  c_2 = color_12;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _Splat0_ST;
uniform highp vec4 _Splat1_ST;
out mediump vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec4 xlv_COLOR0;
out highp vec4 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = (glstate_matrix_mvp * _glesVertex);
  highp vec2 tmpvar_3;
  tmpvar_3 = ((_glesMultiTexCoord0.xy * _Splat0_ST.xy) + _Splat0_ST.zw);
  tmpvar_1.xy = tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = ((_glesMultiTexCoord0.xy * _Splat1_ST.xy) + _Splat1_ST.zw);
  tmpvar_1.zw = tmpvar_4;
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_2 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
  xlv_COLOR0 = _glesColor;
  xlv_TEXCOORD2 = o_5;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _Splat0;
uniform sampler2D _Splat1;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
in mediump vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec4 xlv_COLOR0;
in highp vec4 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  tmpvar_4 = (mix (texture (_Splat0, xlv_TEXCOORD0.xy).xyz, texture (_Splat1, xlv_TEXCOORD0.zw).xyz, xlv_COLOR0.www) * xlv_COLOR0.xyz);
  lowp vec4 tmpvar_5;
  tmpvar_5 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_5;
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lm_6 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = lm_6;
  mediump vec4 tmpvar_9;
  tmpvar_9 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_8);
  light_3 = tmpvar_9;
  lowp vec4 c_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_4 * tmpvar_9.xyz);
  c_10.xyz = tmpvar_11;
  c_10.w = 1.0;
  c_2 = c_10;
  lowp vec4 color_12;
  color_12 = c_2;
  mediump vec3 sceneColor_13;
  sceneColor_13 = color_12.xyz;
  mediump float fowLum_14;
  mediump vec2 fowUv_15;
  highp vec2 tmpvar_16;
  tmpvar_16 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_15 = tmpvar_16;
  lowp float tmpvar_17;
  tmpvar_17 = texture (_FogOfWar, fowUv_15).x;
  fowLum_14 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = (sceneColor_13 * sceneColor_13);
  mediump vec3 tmpvar_19;
  tmpvar_19 = mix (((tmpvar_18 + 
    ((_FOWColor.xyz - tmpvar_18) * 0.85)
  ) * _FOWParams.z), sceneColor_13, vec3(fowLum_14));
  color_12.xyz = tmpvar_19;
  c_2 = color_12;
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
}
 }
}
Fallback "Diffuse"
}