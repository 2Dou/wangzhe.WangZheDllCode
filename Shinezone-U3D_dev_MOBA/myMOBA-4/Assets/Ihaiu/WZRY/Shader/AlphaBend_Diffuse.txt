Shader "S_Game_Scene/Light_VertexLit/AlphaBend_Diffuse" {
Properties {
 _Color ("Main Color", Color) = (1,1,1,1)
 _MainTex ("Base (RGB) Trans (A)", 2D) = "white" {}
 _AlphaTex ("千万不要填，系统用的", 2D) = "white" {}
}
SubShader { 
 LOD 200
 Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
 Pass {
  Tags { "LIGHTMODE"="Vertex" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
Program "vp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  _glesFragData[0] = color_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture2D (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture2D (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  _glesFragData[0] = color_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_3;
  sceneColor_3 = color_1.xyz;
  mediump float PointToEyeDist_4;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture2D (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = (xlv_TEXCOORD2.xyz - _WorldSpaceCameraPos);
  highp float tmpvar_10;
  tmpvar_10 = sqrt(dot (tmpvar_9, tmpvar_9));
  PointToEyeDist_4 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = clamp (((PointToEyeDist_4 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * (tmpvar_11 * tmpvar_11))
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_5));
  color_1.xyz = tmpvar_13;
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_3;
  sceneColor_3 = color_1.xyz;
  mediump float PointToEyeDist_4;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = (xlv_TEXCOORD2.xyz - _WorldSpaceCameraPos);
  highp float tmpvar_10;
  tmpvar_10 = sqrt(dot (tmpvar_9, tmpvar_9));
  PointToEyeDist_4 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = clamp (((PointToEyeDist_4 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * (tmpvar_11 * tmpvar_11))
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_5));
  color_1.xyz = tmpvar_13;
  _glesFragData[0] = color_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture2D (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture2D (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_4;
  sceneColor_4 = color_1.xyz;
  mediump float PointToEyeDist_5;
  mediump float fowLum_6;
  mediump vec2 fowUv_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_7 = tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2D (_FogOfWar, fowUv_7).x;
  fowLum_6 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = (xlv_TEXCOORD2.xyz - _WorldSpaceCameraPos);
  highp float tmpvar_11;
  tmpvar_11 = sqrt(dot (tmpvar_10, tmpvar_10));
  PointToEyeDist_5 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = clamp (((PointToEyeDist_5 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (sceneColor_4 * sceneColor_4);
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (((tmpvar_13 + 
    ((_FOWColor.xyz - tmpvar_13) * (tmpvar_12 * tmpvar_12))
  ) * _FOWParams.z), sceneColor_4, vec3(fowLum_6));
  color_1.xyz = tmpvar_14;
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_4;
  sceneColor_4 = color_1.xyz;
  mediump float PointToEyeDist_5;
  mediump float fowLum_6;
  mediump vec2 fowUv_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_7 = tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture (_FogOfWar, fowUv_7).x;
  fowLum_6 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = (xlv_TEXCOORD2.xyz - _WorldSpaceCameraPos);
  highp float tmpvar_11;
  tmpvar_11 = sqrt(dot (tmpvar_10, tmpvar_10));
  PointToEyeDist_5 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = clamp (((PointToEyeDist_5 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (sceneColor_4 * sceneColor_4);
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (((tmpvar_13 + 
    ((_FOWColor.xyz - tmpvar_13) * (tmpvar_12 * tmpvar_12))
  ) * _FOWParams.z), sceneColor_4, vec3(fowLum_6));
  color_1.xyz = tmpvar_14;
  _glesFragData[0] = color_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_3;
  sceneColor_3 = color_1.xyz;
  mediump float fowLum_4;
  mediump vec2 fowUv_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_5 = tmpvar_6;
  lowp float tmpvar_7;
  tmpvar_7 = texture2D (_FogOfWar, fowUv_5).x;
  fowLum_4 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_9;
  tmpvar_9 = mix (((tmpvar_8 + 
    ((_FOWColor.xyz - tmpvar_8) * 0.85)
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_4));
  color_1.xyz = tmpvar_9;
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_3;
  sceneColor_3 = color_1.xyz;
  mediump float fowLum_4;
  mediump vec2 fowUv_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_5 = tmpvar_6;
  lowp float tmpvar_7;
  tmpvar_7 = texture (_FogOfWar, fowUv_5).x;
  fowLum_4 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_9;
  tmpvar_9 = mix (((tmpvar_8 + 
    ((_FOWColor.xyz - tmpvar_8) * 0.85)
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_4));
  color_1.xyz = tmpvar_9;
  _glesFragData[0] = color_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture2D (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture2D (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_4;
  sceneColor_4 = color_1.xyz;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture2D (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (sceneColor_4 * sceneColor_4);
  mediump vec3 tmpvar_10;
  tmpvar_10 = mix (((tmpvar_9 + 
    ((_FOWColor.xyz - tmpvar_9) * 0.85)
  ) * _FOWParams.z), sceneColor_4, vec3(fowLum_5));
  color_1.xyz = tmpvar_10;
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_4;
  sceneColor_4 = color_1.xyz;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (sceneColor_4 * sceneColor_4);
  mediump vec3 tmpvar_10;
  tmpvar_10 = mix (((tmpvar_9 + 
    ((_FOWColor.xyz - tmpvar_9) * 0.85)
  ) * _FOWParams.z), sceneColor_4, vec3(fowLum_5));
  color_1.xyz = tmpvar_10;
  _glesFragData[0] = color_1;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
}
 }
 Pass {
  Tags { "LIGHTMODE"="VertexLM" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
Program "vp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  _glesFragData[0] = color_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture2D (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture2D (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  _glesFragData[0] = color_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_3;
  sceneColor_3 = color_1.xyz;
  mediump float PointToEyeDist_4;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture2D (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = (xlv_TEXCOORD2.xyz - _WorldSpaceCameraPos);
  highp float tmpvar_10;
  tmpvar_10 = sqrt(dot (tmpvar_9, tmpvar_9));
  PointToEyeDist_4 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = clamp (((PointToEyeDist_4 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * (tmpvar_11 * tmpvar_11))
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_5));
  color_1.xyz = tmpvar_13;
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_3;
  sceneColor_3 = color_1.xyz;
  mediump float PointToEyeDist_4;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = (xlv_TEXCOORD2.xyz - _WorldSpaceCameraPos);
  highp float tmpvar_10;
  tmpvar_10 = sqrt(dot (tmpvar_9, tmpvar_9));
  PointToEyeDist_4 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = clamp (((PointToEyeDist_4 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * (tmpvar_11 * tmpvar_11))
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_5));
  color_1.xyz = tmpvar_13;
  _glesFragData[0] = color_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture2D (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture2D (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_4;
  sceneColor_4 = color_1.xyz;
  mediump float PointToEyeDist_5;
  mediump float fowLum_6;
  mediump vec2 fowUv_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_7 = tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2D (_FogOfWar, fowUv_7).x;
  fowLum_6 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = (xlv_TEXCOORD2.xyz - _WorldSpaceCameraPos);
  highp float tmpvar_11;
  tmpvar_11 = sqrt(dot (tmpvar_10, tmpvar_10));
  PointToEyeDist_5 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = clamp (((PointToEyeDist_5 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (sceneColor_4 * sceneColor_4);
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (((tmpvar_13 + 
    ((_FOWColor.xyz - tmpvar_13) * (tmpvar_12 * tmpvar_12))
  ) * _FOWParams.z), sceneColor_4, vec3(fowLum_6));
  color_1.xyz = tmpvar_14;
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_4;
  sceneColor_4 = color_1.xyz;
  mediump float PointToEyeDist_5;
  mediump float fowLum_6;
  mediump vec2 fowUv_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_7 = tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture (_FogOfWar, fowUv_7).x;
  fowLum_6 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = (xlv_TEXCOORD2.xyz - _WorldSpaceCameraPos);
  highp float tmpvar_11;
  tmpvar_11 = sqrt(dot (tmpvar_10, tmpvar_10));
  PointToEyeDist_5 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = clamp (((PointToEyeDist_5 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (sceneColor_4 * sceneColor_4);
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (((tmpvar_13 + 
    ((_FOWColor.xyz - tmpvar_13) * (tmpvar_12 * tmpvar_12))
  ) * _FOWParams.z), sceneColor_4, vec3(fowLum_6));
  color_1.xyz = tmpvar_14;
  _glesFragData[0] = color_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_3;
  sceneColor_3 = color_1.xyz;
  mediump float fowLum_4;
  mediump vec2 fowUv_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_5 = tmpvar_6;
  lowp float tmpvar_7;
  tmpvar_7 = texture2D (_FogOfWar, fowUv_5).x;
  fowLum_4 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_9;
  tmpvar_9 = mix (((tmpvar_8 + 
    ((_FOWColor.xyz - tmpvar_8) * 0.85)
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_4));
  color_1.xyz = tmpvar_9;
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_3;
  sceneColor_3 = color_1.xyz;
  mediump float fowLum_4;
  mediump vec2 fowUv_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_5 = tmpvar_6;
  lowp float tmpvar_7;
  tmpvar_7 = texture (_FogOfWar, fowUv_5).x;
  fowLum_4 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_9;
  tmpvar_9 = mix (((tmpvar_8 + 
    ((_FOWColor.xyz - tmpvar_8) * 0.85)
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_4));
  color_1.xyz = tmpvar_9;
  _glesFragData[0] = color_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture2D (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture2D (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_4;
  sceneColor_4 = color_1.xyz;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture2D (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (sceneColor_4 * sceneColor_4);
  mediump vec3 tmpvar_10;
  tmpvar_10 = mix (((tmpvar_9 + 
    ((_FOWColor.xyz - tmpvar_9) * 0.85)
  ) * _FOWParams.z), sceneColor_4, vec3(fowLum_5));
  color_1.xyz = tmpvar_10;
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_4;
  sceneColor_4 = color_1.xyz;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (sceneColor_4 * sceneColor_4);
  mediump vec3 tmpvar_10;
  tmpvar_10 = mix (((tmpvar_9 + 
    ((_FOWColor.xyz - tmpvar_9) * 0.85)
  ) * _FOWParams.z), sceneColor_4, vec3(fowLum_5));
  color_1.xyz = tmpvar_10;
  _glesFragData[0] = color_1;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
}
 }
 Pass {
  Tags { "LIGHTMODE"="VertexLMRGBM" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
Program "vp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  _glesFragData[0] = color_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture2D (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture2D (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  _glesFragData[0] = color_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_3;
  sceneColor_3 = color_1.xyz;
  mediump float PointToEyeDist_4;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture2D (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = (xlv_TEXCOORD2.xyz - _WorldSpaceCameraPos);
  highp float tmpvar_10;
  tmpvar_10 = sqrt(dot (tmpvar_9, tmpvar_9));
  PointToEyeDist_4 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = clamp (((PointToEyeDist_4 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * (tmpvar_11 * tmpvar_11))
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_5));
  color_1.xyz = tmpvar_13;
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_3;
  sceneColor_3 = color_1.xyz;
  mediump float PointToEyeDist_4;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = (xlv_TEXCOORD2.xyz - _WorldSpaceCameraPos);
  highp float tmpvar_10;
  tmpvar_10 = sqrt(dot (tmpvar_9, tmpvar_9));
  PointToEyeDist_4 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = clamp (((PointToEyeDist_4 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * (tmpvar_11 * tmpvar_11))
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_5));
  color_1.xyz = tmpvar_13;
  _glesFragData[0] = color_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture2D (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture2D (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_4;
  sceneColor_4 = color_1.xyz;
  mediump float PointToEyeDist_5;
  mediump float fowLum_6;
  mediump vec2 fowUv_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_7 = tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2D (_FogOfWar, fowUv_7).x;
  fowLum_6 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = (xlv_TEXCOORD2.xyz - _WorldSpaceCameraPos);
  highp float tmpvar_11;
  tmpvar_11 = sqrt(dot (tmpvar_10, tmpvar_10));
  PointToEyeDist_5 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = clamp (((PointToEyeDist_5 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (sceneColor_4 * sceneColor_4);
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (((tmpvar_13 + 
    ((_FOWColor.xyz - tmpvar_13) * (tmpvar_12 * tmpvar_12))
  ) * _FOWParams.z), sceneColor_4, vec3(fowLum_6));
  color_1.xyz = tmpvar_14;
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_4;
  sceneColor_4 = color_1.xyz;
  mediump float PointToEyeDist_5;
  mediump float fowLum_6;
  mediump vec2 fowUv_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_7 = tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture (_FogOfWar, fowUv_7).x;
  fowLum_6 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = (xlv_TEXCOORD2.xyz - _WorldSpaceCameraPos);
  highp float tmpvar_11;
  tmpvar_11 = sqrt(dot (tmpvar_10, tmpvar_10));
  PointToEyeDist_5 = tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = clamp (((PointToEyeDist_5 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (sceneColor_4 * sceneColor_4);
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (((tmpvar_13 + 
    ((_FOWColor.xyz - tmpvar_13) * (tmpvar_12 * tmpvar_12))
  ) * _FOWParams.z), sceneColor_4, vec3(fowLum_6));
  color_1.xyz = tmpvar_14;
  _glesFragData[0] = color_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_3;
  sceneColor_3 = color_1.xyz;
  mediump float fowLum_4;
  mediump vec2 fowUv_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_5 = tmpvar_6;
  lowp float tmpvar_7;
  tmpvar_7 = texture2D (_FogOfWar, fowUv_5).x;
  fowLum_4 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_9;
  tmpvar_9 = mix (((tmpvar_8 + 
    ((_FOWColor.xyz - tmpvar_8) * 0.85)
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_4));
  color_1.xyz = tmpvar_9;
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = (texture (_MainTex, xlv_TEXCOORD0) * _Color);
  color_1.w = tmpvar_2.w;
  color_1.xyz = (tmpvar_2.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_3;
  sceneColor_3 = color_1.xyz;
  mediump float fowLum_4;
  mediump vec2 fowUv_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_5 = tmpvar_6;
  lowp float tmpvar_7;
  tmpvar_7 = texture (_FogOfWar, fowUv_5).x;
  fowLum_4 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_9;
  tmpvar_9 = mix (((tmpvar_8 + 
    ((_FOWColor.xyz - tmpvar_8) * 0.85)
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_4));
  color_1.xyz = tmpvar_9;
  _glesFragData[0] = color_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture2D (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture2D (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_4;
  sceneColor_4 = color_1.xyz;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture2D (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (sceneColor_4 * sceneColor_4);
  mediump vec3 tmpvar_10;
  tmpvar_10 = mix (((tmpvar_9 + 
    ((_FOWColor.xyz - tmpvar_9) * 0.85)
  ) * _FOWParams.z), sceneColor_4, vec3(fowLum_5));
  color_1.xyz = tmpvar_10;
  gl_FragData[0] = color_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D unity_Lightmap;
uniform sampler2D _AlphaTex;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 color_1;
  lowp vec4 tmpvar_2;
  tmpvar_2.xyz = texture (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_2.w = texture (_AlphaTex, xlv_TEXCOORD0).w;
  lowp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  color_1.w = tmpvar_3.w;
  color_1.xyz = (tmpvar_3.xyz * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  mediump vec3 sceneColor_4;
  sceneColor_4 = color_1.xyz;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (sceneColor_4 * sceneColor_4);
  mediump vec3 tmpvar_10;
  tmpvar_10 = mix (((tmpvar_9 + 
    ((_FOWColor.xyz - tmpvar_9) * 0.85)
  ) * _FOWParams.z), sceneColor_4, vec3(fowLum_5));
  color_1.xyz = tmpvar_10;
  _glesFragData[0] = color_1;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
}
 }
}
Fallback "Transparent/Cutout/VertexLit"
}