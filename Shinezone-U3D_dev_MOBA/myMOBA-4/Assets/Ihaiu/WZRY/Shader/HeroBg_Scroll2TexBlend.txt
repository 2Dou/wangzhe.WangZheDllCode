Shader "S_Game_Effects/HeroBg_Scroll2TexBlend" {
Properties {
 _MainTex1 ("Tex1(RGB)", 2D) = "white" {}
 _MainTex2 ("Tex2(RGB)", 2D) = "white" {}
 _ScrollX ("Tex1 speed X", Float) = 1
 _ScrollY ("Tex1 speed Y", Float) = 0
 _UVXX ("UVXX", Vector) = (0.3,1,1,1)
}
SubShader { 
 LOD 500
 Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
 Pass {
  Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
  ZWrite Off
  Fog { Mode Off }
  Blend SrcAlpha OneMinusSrcAlpha
Program "vp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _Time;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex1_ST;
uniform highp vec4 _MainTex2_ST;
uniform highp float _ScrollX;
uniform highp float _ScrollY;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_v2f_vertColor;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3.x = _ScrollX;
  tmpvar_3.y = _ScrollY;
  tmpvar_1.xy = (((_glesMultiTexCoord0.xy * _MainTex1_ST.xy) + _MainTex1_ST.zw) + fract((tmpvar_3 * _Time.x)));
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = _glesColor;
  xlv_v2f_vertColor = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex1;
uniform sampler2D _MainTex2;
uniform highp vec4 _UVXX;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 uv_1;
  lowp vec4 o_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex1, xlv_TEXCOORD0.xy);
  highp vec2 tmpvar_4;
  tmpvar_4 = vec2(((tmpvar_3.x * _UVXX.x) * xlv_TEXCOORD1.w));
  uv_1 = tmpvar_4;
  lowp vec4 tmpvar_5;
  highp vec2 P_6;
  P_6 = (xlv_TEXCOORD0.zw + uv_1);
  tmpvar_5 = texture2D (_MainTex2, P_6);
  o_2.xyz = tmpvar_5.xyz;
  o_2.w = tmpvar_5.w;
  gl_FragData[0] = o_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _Time;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex1_ST;
uniform highp vec4 _MainTex2_ST;
uniform highp float _ScrollX;
uniform highp float _ScrollY;
out highp vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD1;
out highp vec4 xlv_v2f_vertColor;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3.x = _ScrollX;
  tmpvar_3.y = _ScrollY;
  tmpvar_1.xy = (((_glesMultiTexCoord0.xy * _MainTex1_ST.xy) + _MainTex1_ST.zw) + fract((tmpvar_3 * _Time.x)));
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = _glesColor;
  xlv_v2f_vertColor = tmpvar_2;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex1;
uniform sampler2D _MainTex2;
uniform highp vec4 _UVXX;
in highp vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 uv_1;
  lowp vec4 o_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture (_MainTex1, xlv_TEXCOORD0.xy);
  highp vec2 tmpvar_4;
  tmpvar_4 = vec2(((tmpvar_3.x * _UVXX.x) * xlv_TEXCOORD1.w));
  uv_1 = tmpvar_4;
  lowp vec4 tmpvar_5;
  highp vec2 P_6;
  P_6 = (xlv_TEXCOORD0.zw + uv_1);
  tmpvar_5 = texture (_MainTex2, P_6);
  o_2.xyz = tmpvar_5.xyz;
  o_2.w = tmpvar_5.w;
  _glesFragData[0] = o_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _Time;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex1_ST;
uniform highp vec4 _MainTex2_ST;
uniform highp float _ScrollX;
uniform highp float _ScrollY;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD1;
varying highp vec4 xlv_v2f_vertColor;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3.x = _ScrollX;
  tmpvar_3.y = _ScrollY;
  tmpvar_1.xy = (((_glesMultiTexCoord0.xy * _MainTex1_ST.xy) + _MainTex1_ST.zw) + fract((tmpvar_3 * _Time.x)));
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = _glesColor;
  xlv_v2f_vertColor = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex1;
uniform sampler2D _MainTex2;
uniform sampler2D _AlphaTex;
uniform highp vec4 _UVXX;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 uv_1;
  lowp vec4 o_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex1, xlv_TEXCOORD0.xy);
  highp vec2 tmpvar_4;
  tmpvar_4 = vec2(((tmpvar_3.x * _UVXX.x) * xlv_TEXCOORD1.w));
  uv_1 = tmpvar_4;
  highp vec2 P_5;
  P_5 = (xlv_TEXCOORD0.zw + uv_1);
  highp vec2 P_6;
  P_6 = (xlv_TEXCOORD0.zw + uv_1);
  lowp vec4 tmpvar_7;
  tmpvar_7.xyz = texture2D (_MainTex2, P_5).xyz;
  tmpvar_7.w = texture2D (_AlphaTex, P_6).x;
  o_2.xyz = tmpvar_7.xyz;
  o_2.w = tmpvar_7.w;
  gl_FragData[0] = o_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _Time;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex1_ST;
uniform highp vec4 _MainTex2_ST;
uniform highp float _ScrollX;
uniform highp float _ScrollY;
out highp vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD1;
out highp vec4 xlv_v2f_vertColor;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3.x = _ScrollX;
  tmpvar_3.y = _ScrollY;
  tmpvar_1.xy = (((_glesMultiTexCoord0.xy * _MainTex1_ST.xy) + _MainTex1_ST.zw) + fract((tmpvar_3 * _Time.x)));
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = _glesColor;
  xlv_v2f_vertColor = tmpvar_2;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex1;
uniform sampler2D _MainTex2;
uniform sampler2D _AlphaTex;
uniform highp vec4 _UVXX;
in highp vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 uv_1;
  lowp vec4 o_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture (_MainTex1, xlv_TEXCOORD0.xy);
  highp vec2 tmpvar_4;
  tmpvar_4 = vec2(((tmpvar_3.x * _UVXX.x) * xlv_TEXCOORD1.w));
  uv_1 = tmpvar_4;
  highp vec2 P_5;
  P_5 = (xlv_TEXCOORD0.zw + uv_1);
  highp vec2 P_6;
  P_6 = (xlv_TEXCOORD0.zw + uv_1);
  lowp vec4 tmpvar_7;
  tmpvar_7.xyz = texture (_MainTex2, P_5).xyz;
  tmpvar_7.w = texture (_AlphaTex, P_6).x;
  o_2.xyz = tmpvar_7.xyz;
  o_2.w = tmpvar_7.w;
  _glesFragData[0] = o_2;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" }
"!!GLES3"
}
}
 }
}
}