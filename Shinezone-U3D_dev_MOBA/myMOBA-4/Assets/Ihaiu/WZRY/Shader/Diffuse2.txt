Shader "S_Game_Scene/Light/Diffuse2" {
Properties {
 _MainTex ("Base (RGB)", 2D) = "white" {}
 _LightmapParam ("lightmap param", Float) = 1
 _LightmapShreshold ("lightmap shreshold", Float) = 0.5
}
SubShader { 
 LOD 200
 Tags { "QUEUE"="Geometry+2" "RenderType"="Opaque" }
 Pass {
  Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry+2" "RenderType"="Opaque" }
Program "vp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform highp float _LightmapParam;
uniform sampler2D unity_Lightmap;
uniform highp float _LightmapShreshold;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  mediump float ratio_1;
  mediump vec3 lm_2;
  mediump vec4 color_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = texture2D (_MainTex, xlv_TEXCOORD0).xyz;
  color_3 = tmpvar_4;
  lowp vec3 tmpvar_5;
  tmpvar_5 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_2 = tmpvar_5;
  highp float tmpvar_6;
  tmpvar_6 = (1.0/(_LightmapShreshold));
  ratio_1 = tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = clamp ((lm_2 * ratio_1), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));
  highp vec3 tmpvar_8;
  tmpvar_8 = (lm_2 * (pow (tmpvar_7, vec3(_LightmapParam)) / tmpvar_7));
  lm_2 = tmpvar_8;
  color_3.xyz = (color_3.xyz * lm_2);
  gl_FragData[0] = color_3;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex;
uniform highp float _LightmapParam;
uniform sampler2D unity_Lightmap;
uniform highp float _LightmapShreshold;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
void main ()
{
  mediump float ratio_1;
  mediump vec3 lm_2;
  mediump vec4 color_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = texture (_MainTex, xlv_TEXCOORD0).xyz;
  color_3 = tmpvar_4;
  lowp vec3 tmpvar_5;
  tmpvar_5 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_2 = tmpvar_5;
  highp float tmpvar_6;
  tmpvar_6 = (1.0/(_LightmapShreshold));
  ratio_1 = tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = clamp ((lm_2 * ratio_1), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));
  highp vec3 tmpvar_8;
  tmpvar_8 = (lm_2 * (pow (tmpvar_7, vec3(_LightmapParam)) / tmpvar_7));
  lm_2 = tmpvar_8;
  color_3.xyz = (color_3.xyz * lm_2);
  _glesFragData[0] = color_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform highp float _LightmapParam;
uniform sampler2D unity_Lightmap;
uniform highp float _LightmapShreshold;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump float ratio_1;
  mediump vec3 lm_2;
  mediump vec4 color_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = texture2D (_MainTex, xlv_TEXCOORD0).xyz;
  color_3 = tmpvar_4;
  lowp vec3 tmpvar_5;
  tmpvar_5 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_2 = tmpvar_5;
  highp float tmpvar_6;
  tmpvar_6 = (1.0/(_LightmapShreshold));
  ratio_1 = tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = clamp ((lm_2 * ratio_1), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));
  highp vec3 tmpvar_8;
  tmpvar_8 = (lm_2 * (pow (tmpvar_7, vec3(_LightmapParam)) / tmpvar_7));
  lm_2 = tmpvar_8;
  color_3.xyz = (color_3.xyz * lm_2);
  mediump float PointToEyeDist_9;
  mediump float fowLum_10;
  mediump vec2 fowUv_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_11 = tmpvar_12;
  lowp float tmpvar_13;
  tmpvar_13 = texture2D (_FogOfWar, fowUv_11).x;
  fowLum_10 = tmpvar_13;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD2.xyz - _WorldSpaceCameraPos);
  highp float tmpvar_15;
  tmpvar_15 = sqrt(dot (tmpvar_14, tmpvar_14));
  PointToEyeDist_9 = tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = clamp (((PointToEyeDist_9 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_17;
  tmpvar_17 = (color_3.xyz * color_3.xyz);
  color_3.xyz = mix (((tmpvar_17 + 
    ((_FOWColor.xyz - tmpvar_17) * (tmpvar_16 * tmpvar_16))
  ) * _FOWParams.z), color_3.xyz, vec3(fowLum_10));
  gl_FragData[0] = color_3;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform highp float _LightmapParam;
uniform sampler2D unity_Lightmap;
uniform highp float _LightmapShreshold;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump float ratio_1;
  mediump vec3 lm_2;
  mediump vec4 color_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = texture (_MainTex, xlv_TEXCOORD0).xyz;
  color_3 = tmpvar_4;
  lowp vec3 tmpvar_5;
  tmpvar_5 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_2 = tmpvar_5;
  highp float tmpvar_6;
  tmpvar_6 = (1.0/(_LightmapShreshold));
  ratio_1 = tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = clamp ((lm_2 * ratio_1), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));
  highp vec3 tmpvar_8;
  tmpvar_8 = (lm_2 * (pow (tmpvar_7, vec3(_LightmapParam)) / tmpvar_7));
  lm_2 = tmpvar_8;
  color_3.xyz = (color_3.xyz * lm_2);
  mediump float PointToEyeDist_9;
  mediump float fowLum_10;
  mediump vec2 fowUv_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_11 = tmpvar_12;
  lowp float tmpvar_13;
  tmpvar_13 = texture (_FogOfWar, fowUv_11).x;
  fowLum_10 = tmpvar_13;
  highp vec3 tmpvar_14;
  tmpvar_14 = (xlv_TEXCOORD2.xyz - _WorldSpaceCameraPos);
  highp float tmpvar_15;
  tmpvar_15 = sqrt(dot (tmpvar_14, tmpvar_14));
  PointToEyeDist_9 = tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = clamp (((PointToEyeDist_9 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_17;
  tmpvar_17 = (color_3.xyz * color_3.xyz);
  color_3.xyz = mix (((tmpvar_17 + 
    ((_FOWColor.xyz - tmpvar_17) * (tmpvar_16 * tmpvar_16))
  ) * _FOWParams.z), color_3.xyz, vec3(fowLum_10));
  _glesFragData[0] = color_3;
}



#endif"
}
SubProgram "gles " {
Keywords { "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform highp float _LightmapParam;
uniform sampler2D unity_Lightmap;
uniform highp float _LightmapShreshold;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump float ratio_1;
  mediump vec3 lm_2;
  mediump vec4 color_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = texture2D (_MainTex, xlv_TEXCOORD0).xyz;
  color_3 = tmpvar_4;
  lowp vec3 tmpvar_5;
  tmpvar_5 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_2 = tmpvar_5;
  highp float tmpvar_6;
  tmpvar_6 = (1.0/(_LightmapShreshold));
  ratio_1 = tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = clamp ((lm_2 * ratio_1), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));
  highp vec3 tmpvar_8;
  tmpvar_8 = (lm_2 * (pow (tmpvar_7, vec3(_LightmapParam)) / tmpvar_7));
  lm_2 = tmpvar_8;
  color_3.xyz = (color_3.xyz * lm_2);
  mediump float fowLum_9;
  mediump vec2 fowUv_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_10 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = texture2D (_FogOfWar, fowUv_10).x;
  fowLum_9 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (color_3.xyz * color_3.xyz);
  color_3.xyz = mix (((tmpvar_13 + 
    ((_FOWColor.xyz - tmpvar_13) * 0.85)
  ) * _FOWParams.z), color_3.xyz, vec3(fowLum_9));
  gl_FragData[0] = color_3;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
uniform highp float _LightmapParam;
uniform sampler2D unity_Lightmap;
uniform highp float _LightmapShreshold;
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  mediump float ratio_1;
  mediump vec3 lm_2;
  mediump vec4 color_3;
  lowp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = texture (_MainTex, xlv_TEXCOORD0).xyz;
  color_3 = tmpvar_4;
  lowp vec3 tmpvar_5;
  tmpvar_5 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_2 = tmpvar_5;
  highp float tmpvar_6;
  tmpvar_6 = (1.0/(_LightmapShreshold));
  ratio_1 = tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = clamp ((lm_2 * ratio_1), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));
  highp vec3 tmpvar_8;
  tmpvar_8 = (lm_2 * (pow (tmpvar_7, vec3(_LightmapParam)) / tmpvar_7));
  lm_2 = tmpvar_8;
  color_3.xyz = (color_3.xyz * lm_2);
  mediump float fowLum_9;
  mediump vec2 fowUv_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((xlv_TEXCOORD2.xz * _InvSceneSize.xy) + 0.5);
  fowUv_10 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = texture (_FogOfWar, fowUv_10).x;
  fowLum_9 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (color_3.xyz * color_3.xyz);
  color_3.xyz = mix (((tmpvar_13 + 
    ((_FOWColor.xyz - tmpvar_13) * 0.85)
  ) * _FOWParams.z), color_3.xyz, vec3(fowLum_9));
  _glesFragData[0] = color_3;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
}
 }
}
}