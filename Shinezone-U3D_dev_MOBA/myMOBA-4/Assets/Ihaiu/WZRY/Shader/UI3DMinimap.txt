Shader "UI/UI3DMinimap" {
Properties {
 _MainTex ("Main Texture", 2D) = "white" {}
 _Color ("Color", Color) = (1,1,1,1)
 _FowIntensity ("FOW Intensity", Float) = 2
[HideInInspector]  _ColorMask ("Color Mask", Float) = 15
[HideInInspector]  _FowParams ("FOW Params", Vector) = (1,1,1,1)
}
SubShader { 
 Tags { "QUEUE"="Transparent+1500" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
 Pass {
  Tags { "QUEUE"="Transparent+1500" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
  ZTest False
  ZWrite Off
  Fog { Mode Off }
  Blend SrcAlpha OneMinusSrcAlpha
Program "vp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
varying lowp vec4 xlv_COLOR;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_COLOR = _glesColor;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
varying lowp vec4 xlv_COLOR;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = ((texture2D (_MainTex, xlv_TEXCOORD0) * xlv_COLOR) * _Color);
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
out lowp vec4 xlv_COLOR;
out highp vec2 xlv_TEXCOORD0;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_COLOR = _glesColor;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
in lowp vec4 xlv_COLOR;
in highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = ((texture (_MainTex, xlv_TEXCOORD0) * xlv_COLOR) * _Color);
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
varying lowp vec4 xlv_COLOR;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_COLOR = _glesColor;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D _AlphaTex;
varying lowp vec4 xlv_COLOR;
varying highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1.xyz = texture2D (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_1.w = texture2D (_AlphaTex, xlv_TEXCOORD0).x;
  lowp vec4 tmpvar_2;
  tmpvar_2 = ((tmpvar_1 * xlv_COLOR) * _Color);
  gl_FragData[0] = tmpvar_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
out lowp vec4 xlv_COLOR;
out highp vec2 xlv_TEXCOORD0;
void main ()
{
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_COLOR = _glesColor;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D _AlphaTex;
in lowp vec4 xlv_COLOR;
in highp vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1.xyz = texture (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_1.w = texture (_AlphaTex, xlv_TEXCOORD0).x;
  lowp vec4 tmpvar_2;
  tmpvar_2 = ((tmpvar_1 * xlv_COLOR) * _Color);
  _glesFragData[0] = tmpvar_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform mediump vec4 _FowParams;
varying lowp vec4 xlv_COLOR;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 uvFow_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3 = (vec2(0.5, 0.5) + ((
    floor((tmpvar_2 + vec2(0.5, 0.5)))
   - vec2(0.5, 0.5)) * _FowParams.x));
  uvFow_1 = tmpvar_3;
  mediump vec2 tmpvar_4;
  tmpvar_4 = mix ((vec2(1.0, 1.0) - uvFow_1), uvFow_1, _FowParams.yy);
  uvFow_1 = tmpvar_4;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_COLOR = _glesColor;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform sampler2D _FogOfWar;
uniform lowp vec4 _Color;
uniform mediump float _FowIntensity;
varying lowp vec4 xlv_COLOR;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump float fog_1;
  lowp vec4 col_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  col_2.w = tmpvar_3.w;
  lowp float tmpvar_4;
  tmpvar_4 = texture2D (_FogOfWar, xlv_TEXCOORD1).z;
  fog_1 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_3.xyz * (1.0 - (fog_1 * _FowIntensity)));
  col_2.xyz = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = ((col_2 * xlv_COLOR) * _Color);
  gl_FragData[0] = tmpvar_6;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform mediump vec4 _FowParams;
out lowp vec4 xlv_COLOR;
out highp vec2 xlv_TEXCOORD0;
out mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 uvFow_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3 = (vec2(0.5, 0.5) + ((
    floor((tmpvar_2 + vec2(0.5, 0.5)))
   - vec2(0.5, 0.5)) * _FowParams.x));
  uvFow_1 = tmpvar_3;
  mediump vec2 tmpvar_4;
  tmpvar_4 = mix ((vec2(1.0, 1.0) - uvFow_1), uvFow_1, _FowParams.yy);
  uvFow_1 = tmpvar_4;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_COLOR = _glesColor;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex;
uniform sampler2D _FogOfWar;
uniform lowp vec4 _Color;
uniform mediump float _FowIntensity;
in lowp vec4 xlv_COLOR;
in highp vec2 xlv_TEXCOORD0;
in mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump float fog_1;
  lowp vec4 col_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture (_MainTex, xlv_TEXCOORD0);
  col_2.w = tmpvar_3.w;
  lowp float tmpvar_4;
  tmpvar_4 = texture (_FogOfWar, xlv_TEXCOORD1).z;
  fog_1 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_3.xyz * (1.0 - (fog_1 * _FowIntensity)));
  col_2.xyz = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = ((col_2 * xlv_COLOR) * _Color);
  _glesFragData[0] = tmpvar_6;
}



#endif"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform mediump vec4 _FowParams;
varying lowp vec4 xlv_COLOR;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 uvFow_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3 = (vec2(0.5, 0.5) + ((
    floor((tmpvar_2 + vec2(0.5, 0.5)))
   - vec2(0.5, 0.5)) * _FowParams.x));
  uvFow_1 = tmpvar_3;
  mediump vec2 tmpvar_4;
  tmpvar_4 = mix ((vec2(1.0, 1.0) - uvFow_1), uvFow_1, _FowParams.yy);
  uvFow_1 = tmpvar_4;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_COLOR = _glesColor;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform sampler2D _FogOfWar;
uniform lowp vec4 _Color;
uniform sampler2D _AlphaTex;
uniform mediump float _FowIntensity;
varying lowp vec4 xlv_COLOR;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump float fog_1;
  lowp vec4 col_2;
  lowp vec4 tmpvar_3;
  tmpvar_3.xyz = texture2D (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_3.w = texture2D (_AlphaTex, xlv_TEXCOORD0).x;
  col_2.w = tmpvar_3.w;
  lowp float tmpvar_4;
  tmpvar_4 = texture2D (_FogOfWar, xlv_TEXCOORD1).z;
  fog_1 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_3.xyz * (1.0 - (fog_1 * _FowIntensity)));
  col_2.xyz = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = ((col_2 * xlv_COLOR) * _Color);
  gl_FragData[0] = tmpvar_6;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform mediump vec4 _FowParams;
out lowp vec4 xlv_COLOR;
out highp vec2 xlv_TEXCOORD0;
out mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 uvFow_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3 = (vec2(0.5, 0.5) + ((
    floor((tmpvar_2 + vec2(0.5, 0.5)))
   - vec2(0.5, 0.5)) * _FowParams.x));
  uvFow_1 = tmpvar_3;
  mediump vec2 tmpvar_4;
  tmpvar_4 = mix ((vec2(1.0, 1.0) - uvFow_1), uvFow_1, _FowParams.yy);
  uvFow_1 = tmpvar_4;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_COLOR = _glesColor;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex;
uniform sampler2D _FogOfWar;
uniform lowp vec4 _Color;
uniform sampler2D _AlphaTex;
uniform mediump float _FowIntensity;
in lowp vec4 xlv_COLOR;
in highp vec2 xlv_TEXCOORD0;
in mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump float fog_1;
  lowp vec4 col_2;
  lowp vec4 tmpvar_3;
  tmpvar_3.xyz = texture (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_3.w = texture (_AlphaTex, xlv_TEXCOORD0).x;
  col_2.w = tmpvar_3.w;
  lowp float tmpvar_4;
  tmpvar_4 = texture (_FogOfWar, xlv_TEXCOORD1).z;
  fog_1 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_3.xyz * (1.0 - (fog_1 * _FowIntensity)));
  col_2.xyz = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = ((col_2 * xlv_COLOR) * _Color);
  _glesFragData[0] = tmpvar_6;
}



#endif"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform mediump vec4 _FowParams;
varying lowp vec4 xlv_COLOR;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 uvFow_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3 = (vec2(0.5, 0.5) + ((
    floor((tmpvar_2 + vec2(0.5, 0.5)))
   - vec2(0.5, 0.5)) * _FowParams.x));
  uvFow_1 = tmpvar_3;
  mediump vec2 tmpvar_4;
  tmpvar_4 = mix ((vec2(1.0, 1.0) - uvFow_1), uvFow_1, _FowParams.yy);
  uvFow_1 = tmpvar_4;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_COLOR = _glesColor;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform sampler2D _FogOfWar;
uniform lowp vec4 _Color;
uniform mediump float _FowIntensity;
varying lowp vec4 xlv_COLOR;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump float fog_1;
  lowp vec4 col_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  col_2.w = tmpvar_3.w;
  lowp float tmpvar_4;
  tmpvar_4 = texture2D (_FogOfWar, xlv_TEXCOORD1).z;
  fog_1 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_3.xyz * (1.0 - (fog_1 * _FowIntensity)));
  col_2.xyz = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = ((col_2 * xlv_COLOR) * _Color);
  gl_FragData[0] = tmpvar_6;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform mediump vec4 _FowParams;
out lowp vec4 xlv_COLOR;
out highp vec2 xlv_TEXCOORD0;
out mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 uvFow_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3 = (vec2(0.5, 0.5) + ((
    floor((tmpvar_2 + vec2(0.5, 0.5)))
   - vec2(0.5, 0.5)) * _FowParams.x));
  uvFow_1 = tmpvar_3;
  mediump vec2 tmpvar_4;
  tmpvar_4 = mix ((vec2(1.0, 1.0) - uvFow_1), uvFow_1, _FowParams.yy);
  uvFow_1 = tmpvar_4;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_COLOR = _glesColor;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex;
uniform sampler2D _FogOfWar;
uniform lowp vec4 _Color;
uniform mediump float _FowIntensity;
in lowp vec4 xlv_COLOR;
in highp vec2 xlv_TEXCOORD0;
in mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump float fog_1;
  lowp vec4 col_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture (_MainTex, xlv_TEXCOORD0);
  col_2.w = tmpvar_3.w;
  lowp float tmpvar_4;
  tmpvar_4 = texture (_FogOfWar, xlv_TEXCOORD1).z;
  fog_1 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_3.xyz * (1.0 - (fog_1 * _FowIntensity)));
  col_2.xyz = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = ((col_2 * xlv_COLOR) * _Color);
  _glesFragData[0] = tmpvar_6;
}



#endif"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform mediump vec4 _FowParams;
varying lowp vec4 xlv_COLOR;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 uvFow_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3 = (vec2(0.5, 0.5) + ((
    floor((tmpvar_2 + vec2(0.5, 0.5)))
   - vec2(0.5, 0.5)) * _FowParams.x));
  uvFow_1 = tmpvar_3;
  mediump vec2 tmpvar_4;
  tmpvar_4 = mix ((vec2(1.0, 1.0) - uvFow_1), uvFow_1, _FowParams.yy);
  uvFow_1 = tmpvar_4;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_COLOR = _glesColor;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform sampler2D _FogOfWar;
uniform lowp vec4 _Color;
uniform sampler2D _AlphaTex;
uniform mediump float _FowIntensity;
varying lowp vec4 xlv_COLOR;
varying highp vec2 xlv_TEXCOORD0;
varying mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump float fog_1;
  lowp vec4 col_2;
  lowp vec4 tmpvar_3;
  tmpvar_3.xyz = texture2D (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_3.w = texture2D (_AlphaTex, xlv_TEXCOORD0).x;
  col_2.w = tmpvar_3.w;
  lowp float tmpvar_4;
  tmpvar_4 = texture2D (_FogOfWar, xlv_TEXCOORD1).z;
  fog_1 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_3.xyz * (1.0 - (fog_1 * _FowIntensity)));
  col_2.xyz = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = ((col_2 * xlv_COLOR) * _Color);
  gl_FragData[0] = tmpvar_6;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
uniform mediump vec4 _FowParams;
out lowp vec4 xlv_COLOR;
out highp vec2 xlv_TEXCOORD0;
out mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 uvFow_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_3;
  tmpvar_3 = (vec2(0.5, 0.5) + ((
    floor((tmpvar_2 + vec2(0.5, 0.5)))
   - vec2(0.5, 0.5)) * _FowParams.x));
  uvFow_1 = tmpvar_3;
  mediump vec2 tmpvar_4;
  tmpvar_4 = mix ((vec2(1.0, 1.0) - uvFow_1), uvFow_1, _FowParams.yy);
  uvFow_1 = tmpvar_4;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_COLOR = _glesColor;
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD1 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex;
uniform sampler2D _FogOfWar;
uniform lowp vec4 _Color;
uniform sampler2D _AlphaTex;
uniform mediump float _FowIntensity;
in lowp vec4 xlv_COLOR;
in highp vec2 xlv_TEXCOORD0;
in mediump vec2 xlv_TEXCOORD1;
void main ()
{
  mediump float fog_1;
  lowp vec4 col_2;
  lowp vec4 tmpvar_3;
  tmpvar_3.xyz = texture (_MainTex, xlv_TEXCOORD0).xyz;
  tmpvar_3.w = texture (_AlphaTex, xlv_TEXCOORD0).x;
  col_2.w = tmpvar_3.w;
  lowp float tmpvar_4;
  tmpvar_4 = texture (_FogOfWar, xlv_TEXCOORD1).z;
  fog_1 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_3.xyz * (1.0 - (fog_1 * _FowIntensity)));
  col_2.xyz = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = ((col_2 * xlv_COLOR) * _Color);
  _glesFragData[0] = tmpvar_6;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_SEPERATE_ALPHA_TEX_ON" "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
}
 }
}
}