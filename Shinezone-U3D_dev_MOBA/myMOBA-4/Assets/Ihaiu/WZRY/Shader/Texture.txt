Shader "S_Game_Scene/Texture" {
Properties {
 _MainTex ("Base (RGB)", 2D) = "white" {}
}
SubShader { 
 LOD 100
 Tags { "RenderType"="Opaque" }
 Pass {
  Tags { "RenderType"="Opaque" }
  ColorMask RGB
Program "vp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
varying mediump vec2 xlv_TEXCOORD0;
void main ()
{
  mediump vec2 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1 = tmpvar_2;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
varying mediump vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = texture2D (_MainTex, xlv_TEXCOORD0);
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _MainTex_ST;
out mediump vec2 xlv_TEXCOORD0;
void main ()
{
  mediump vec2 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1 = tmpvar_2;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex;
in mediump vec2 xlv_TEXCOORD0;
void main ()
{
  lowp vec4 tmpvar_1;
  tmpvar_1 = texture (_MainTex, xlv_TEXCOORD0);
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_FOG_OF_WAR_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
varying mediump vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1 = tmpvar_2;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
varying mediump vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  col_1.w = tmpvar_2.w;
  mediump vec3 sceneColor_3;
  sceneColor_3 = tmpvar_2.xyz;
  mediump float PointToEyeDist_4;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture2D (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_10;
  tmpvar_10 = sqrt(dot (tmpvar_9, tmpvar_9));
  PointToEyeDist_4 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = clamp (((PointToEyeDist_4 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * (tmpvar_11 * tmpvar_11))
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_5));
  col_1.xyz = tmpvar_13;
  gl_FragData[0] = col_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_FOG_OF_WAR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
out mediump vec2 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1 = tmpvar_2;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
in mediump vec2 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture (_MainTex, xlv_TEXCOORD0);
  col_1.w = tmpvar_2.w;
  mediump vec3 sceneColor_3;
  sceneColor_3 = tmpvar_2.xyz;
  mediump float PointToEyeDist_4;
  mediump float fowLum_5;
  mediump vec2 fowUv_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_6 = tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture (_FogOfWar, fowUv_6).x;
  fowLum_5 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = (xlv_TEXCOORD1 - _WorldSpaceCameraPos);
  highp float tmpvar_10;
  tmpvar_10 = sqrt(dot (tmpvar_9, tmpvar_9));
  PointToEyeDist_4 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = clamp (((PointToEyeDist_4 * _FOWParams.x) + _FOWParams.y), 0.0, 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (((tmpvar_12 + 
    ((_FOWColor.xyz - tmpvar_12) * (tmpvar_11 * tmpvar_11))
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_5));
  col_1.xyz = tmpvar_13;
  _glesFragData[0] = col_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "_FOG_OF_WAR_ON_LOW" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
varying mediump vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1 = tmpvar_2;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
varying mediump vec2 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0);
  col_1.w = tmpvar_2.w;
  mediump vec3 sceneColor_3;
  sceneColor_3 = tmpvar_2.xyz;
  mediump float fowLum_4;
  mediump vec2 fowUv_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_5 = tmpvar_6;
  lowp float tmpvar_7;
  tmpvar_7 = texture2D (_FogOfWar, fowUv_5).x;
  fowLum_4 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_9;
  tmpvar_9 = mix (((tmpvar_8 + 
    ((_FOWColor.xyz - tmpvar_8) * 0.85)
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_4));
  col_1.xyz = tmpvar_9;
  gl_FragData[0] = col_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "_FOG_OF_WAR_ON_LOW" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
out mediump vec2 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
void main ()
{
  mediump vec2 tmpvar_1;
  highp vec2 tmpvar_2;
  tmpvar_2 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1 = tmpvar_2;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex).xyz;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform sampler2D _FogOfWar;
uniform highp vec4 _InvSceneSize;
uniform mediump vec4 _FOWColor;
uniform mediump vec4 _FOWParams;
uniform sampler2D _MainTex;
in mediump vec2 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 col_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture (_MainTex, xlv_TEXCOORD0);
  col_1.w = tmpvar_2.w;
  mediump vec3 sceneColor_3;
  sceneColor_3 = tmpvar_2.xyz;
  mediump float fowLum_4;
  mediump vec2 fowUv_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((xlv_TEXCOORD1.xz * _InvSceneSize.xy) + 0.5);
  fowUv_5 = tmpvar_6;
  lowp float tmpvar_7;
  tmpvar_7 = texture (_FogOfWar, fowUv_5).x;
  fowLum_4 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (sceneColor_3 * sceneColor_3);
  mediump vec3 tmpvar_9;
  tmpvar_9 = mix (((tmpvar_8 + 
    ((_FOWColor.xyz - tmpvar_8) * 0.85)
  ) * _FOWParams.z), sceneColor_3, vec3(fowLum_4));
  col_1.xyz = tmpvar_9;
  _glesFragData[0] = col_1;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "_DUMMY" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_DUMMY" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_FOG_OF_WAR_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_FOG_OF_WAR_ON" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "_FOG_OF_WAR_ON_LOW" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "_FOG_OF_WAR_ON_LOW" }
"!!GLES3"
}
}
 }
}
}